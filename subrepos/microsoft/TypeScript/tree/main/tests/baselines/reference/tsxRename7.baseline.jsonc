// === findRenameLocations ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 4) skipped ---
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     /*RENAME*/<|[|propxRENAME|]: number|>
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt <|[|propxRENAME|]={100}|> propString />;
// let opt2 = <Opt <|[|propxRENAME|]={100}|> optional/>;
// let opt3 = <Opt wrong />;



// === findRenameLocations ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 4) skipped ---
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     <|[|propxRENAME|]: number|>
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt /*RENAME*/<|[|propxRENAME|]={100}|> propString />;
// let opt2 = <Opt <|[|propxRENAME|]={100}|> optional/>;
// let opt3 = <Opt wrong />;



// === findRenameLocations ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 4) skipped ---
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     <|[|propxRENAME|]: number|>
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt <|[|propxRENAME|]={100}|> propString />;
// let opt2 = <Opt /*RENAME*/<|[|propxRENAME|]={100}|> optional/>;
// let opt3 = <Opt wrong />;