//// [tests/cases/conformance/esDecorators/esDecorators-arguments.ts] ////

=== esDecorators-arguments.ts ===
@(() => {})
@((a: any) => {})
>a : Symbol(a, Decl(esDecorators-arguments.ts, 1, 3))

@((a: any, b: any) => {})
>a : Symbol(a, Decl(esDecorators-arguments.ts, 2, 3))
>b : Symbol(b, Decl(esDecorators-arguments.ts, 2, 10))

@((a: any, b: any, c: any) => {})
>a : Symbol(a, Decl(esDecorators-arguments.ts, 3, 3))
>b : Symbol(b, Decl(esDecorators-arguments.ts, 3, 10))
>c : Symbol(c, Decl(esDecorators-arguments.ts, 3, 18))

@((a: any, b: any, c: any, ...d: any[]) => {})
>a : Symbol(a, Decl(esDecorators-arguments.ts, 4, 3))
>b : Symbol(b, Decl(esDecorators-arguments.ts, 4, 10))
>c : Symbol(c, Decl(esDecorators-arguments.ts, 4, 18))
>d : Symbol(d, Decl(esDecorators-arguments.ts, 4, 26))

class C1 {}
>C1 : Symbol(C1, Decl(esDecorators-arguments.ts, 0, 0))

