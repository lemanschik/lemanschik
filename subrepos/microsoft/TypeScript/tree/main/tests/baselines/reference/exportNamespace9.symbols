//// [tests/cases/conformance/externalModules/typeOnly/exportNamespace9.ts] ////

=== /a.ts ===
export type A = number;
>A : Symbol(A, Decl(a.ts, 0, 0))

=== /b.ts ===

export type * from "./a";

=== /c.ts ===
import { A } from "./b";
>A : Symbol(A, Decl(c.ts, 0, 8), Decl(c.ts, 1, 5))

const A = 1;
>A : Symbol(A, Decl(c.ts, 0, 8), Decl(c.ts, 1, 5))

export { A };
>A : Symbol(A, Decl(c.ts, 2, 8))

=== /d.ts ===
import { A } from "./c";
>A : Symbol(A, Decl(d.ts, 0, 8))

A; // Ok
>A : Symbol(A, Decl(d.ts, 0, 8))

type _ = A;
>_ : Symbol(_, Decl(d.ts, 1, 2))
>A : Symbol(A, Decl(d.ts, 0, 8))

=== /e.ts ===
export const A = 1;
>A : Symbol(A, Decl(e.ts, 0, 12))

=== /f.ts ===

export * from "./e";
export type * from "./a"; // Collision error

=== /g.ts ===
import { A } from "./f";
>A : Symbol(A, Decl(g.ts, 0, 8))

A;
>A : Symbol(A, Decl(g.ts, 0, 8))

type _ = A; // Follow-on from collision error
>_ : Symbol(_, Decl(g.ts, 1, 2))
>A : Symbol(A)

