// === findAllReferences ===
// === /a.js ===
// /** @enum {string} */
// /*FIND ALL REFS*/<|const [|{| isWriteAccess: true, isDefinition: true |}E|] = { A: "" };|>
// [|E|]["A"];
// /** @type {[|E|]} */
// const e = [|E|].A;

  // === Definitions ===
  // === /a.js ===
  // /** @enum {string} */
  // /*FIND ALL REFS*/<|const [|E|] = { A: "" };|>
  // E["A"];
  // /** @type {E} */
  // const e = E.A;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "const",
    "name": "type E = string\nconst E: {\n    A: string;\n}",
    "displayParts": [
     {
      "text": "type",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "E",
      "kind": "localName"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=",
      "kind": "operator"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "E",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "{",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "    ",
      "kind": "space"
     },
     {
      "text": "A",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     },
     {
      "text": ";",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "}",
      "kind": "punctuation"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /a.js ===
// /** @enum {string} */
// <|const /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}E|] = { A: "" };|>
// [|E|]["A"];
// /** @type {[|E|]} */
// const e = [|E|].A;

  // === Definitions ===
  // === /a.js ===
  // /** @enum {string} */
  // <|const /*FIND ALL REFS*/[|E|] = { A: "" };|>
  // E["A"];
  // /** @type {E} */
  // const e = E.A;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "const",
    "name": "type E = string\nconst E: {\n    A: string;\n}",
    "displayParts": [
     {
      "text": "type",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "E",
      "kind": "localName"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=",
      "kind": "operator"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "E",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "{",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "    ",
      "kind": "space"
     },
     {
      "text": "A",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     },
     {
      "text": ";",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "}",
      "kind": "punctuation"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /a.js ===
// /** @enum {string} */
// <|const [|{| isWriteAccess: true |}E|] = { A: "" };|>
// /*FIND ALL REFS*/[|E|]["A"];
// /** @type {[|E|]} */
// const e = [|E|].A;

  // === Definitions ===
  // === /a.js ===
  // /** @enum {string} */
  // <|const [|E|] = { A: "" };|>
  // /*FIND ALL REFS*/E["A"];
  // /** @type {E} */
  // const e = E.A;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "const",
    "name": "type E = string\nconst E: {\n    A: string;\n}",
    "displayParts": [
     {
      "text": "type",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "E",
      "kind": "localName"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=",
      "kind": "operator"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "E",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "{",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "    ",
      "kind": "space"
     },
     {
      "text": "A",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     },
     {
      "text": ";",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "}",
      "kind": "punctuation"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /a.js ===
// /** @enum {string} */
// <|const [|{| isWriteAccess: true |}E|] = { A: "" };|>
// [|E|]["A"];
// /** @type {/*FIND ALL REFS*/[|E|]} */
// const e = [|E|].A;

  // === Definitions ===
  // === /a.js ===
  // /** @enum {string} */
  // <|const [|E|] = { A: "" };|>
  // E["A"];
  // /** @type {/*FIND ALL REFS*/E} */
  // const e = E.A;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "const",
    "name": "type E = string\nconst E: {\n    A: string;\n}",
    "displayParts": [
     {
      "text": "type",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "E",
      "kind": "localName"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=",
      "kind": "operator"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "E",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "{",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "    ",
      "kind": "space"
     },
     {
      "text": "A",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     },
     {
      "text": ";",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "}",
      "kind": "punctuation"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /a.js ===
// /** @enum {string} */
// <|const [|{| isWriteAccess: true |}E|] = { A: "" };|>
// [|E|]["A"];
// /** @type {[|E|]} */
// const e = /*FIND ALL REFS*/[|E|].A;

  // === Definitions ===
  // === /a.js ===
  // /** @enum {string} */
  // <|const [|E|] = { A: "" };|>
  // E["A"];
  // /** @type {E} */
  // const e = /*FIND ALL REFS*/E.A;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "const",
    "name": "type E = string\nconst E: {\n    A: string;\n}",
    "displayParts": [
     {
      "text": "type",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "E",
      "kind": "localName"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=",
      "kind": "operator"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "E",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "{",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "    ",
      "kind": "space"
     },
     {
      "text": "A",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     },
     {
      "text": ";",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "}",
      "kind": "punctuation"
     }
    ]
   }
  ]