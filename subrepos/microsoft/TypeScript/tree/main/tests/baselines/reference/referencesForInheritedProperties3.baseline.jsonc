// === findAllReferences ===
// === /tests/cases/fourslash/referencesForInheritedProperties3.ts ===
// interface interface1 extends interface1 {
//    /*FIND ALL REFS*/<|[|{| isDefinition: true |}doStuff|](): void;|>
//    propName: string;
// }
// 
// var v: interface1;
// v.propName;
// v.[|doStuff|]();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForInheritedProperties3.ts ===
  // interface interface1 extends interface1 {
  //    /*FIND ALL REFS*/<|[|doStuff|](): void;|>
  //    propName: string;
  // }
  // 
  // --- (line: 6) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) interface1.doStuff(): void",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "interface1",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "doStuff",
      "kind": "methodName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForInheritedProperties3.ts ===
// interface interface1 extends interface1 {
//    doStuff(): void;
//    /*FIND ALL REFS*/<|[|{| isDefinition: true |}propName|]: string;|>
// }
// 
// var v: interface1;
// v.[|propName|];
// v.doStuff();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForInheritedProperties3.ts ===
  // interface interface1 extends interface1 {
  //    doStuff(): void;
  //    /*FIND ALL REFS*/<|[|propName|]: string;|>
  // }
  // 
  // var v: interface1;
  // v.propName;
  // v.doStuff();

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) interface1.propName: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "interface1",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "propName",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForInheritedProperties3.ts ===
// interface interface1 extends interface1 {
//    doStuff(): void;
//    <|[|propName|]: string;|>
// }
// 
// var v: interface1;
// v./*FIND ALL REFS*/[|propName|];
// v.doStuff();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForInheritedProperties3.ts ===
  // interface interface1 extends interface1 {
  //    doStuff(): void;
  //    <|[|propName|]: string;|>
  // }
  // 
  // var v: interface1;
  // v./*FIND ALL REFS*/propName;
  // v.doStuff();

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) interface1.propName: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "interface1",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "propName",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForInheritedProperties3.ts ===
// interface interface1 extends interface1 {
//    <|[|doStuff|](): void;|>
//    propName: string;
// }
// 
// var v: interface1;
// v.propName;
// v./*FIND ALL REFS*/[|doStuff|]();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForInheritedProperties3.ts ===
  // interface interface1 extends interface1 {
  //    <|[|doStuff|](): void;|>
  //    propName: string;
  // }
  // 
  // var v: interface1;
  // v.propName;
  // v./*FIND ALL REFS*/doStuff();

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) interface1.doStuff(): void",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "interface1",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "doStuff",
      "kind": "methodName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]