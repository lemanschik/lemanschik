// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsRootSymbols.ts ===
// interface I { /*FIND ALL REFS*/<|[|{| defId: 0, isDefinition: true |}x|]: {};|> }
// interface J { x: {}; }
// declare const o: (I | J) & { x: string };
// o.[|{| defId: 1 |}x|];

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsRootSymbols.ts ===
  // interface I { /*FIND ALL REFS*/<|[|{| defId: 0 |}<|[|{| defId: 1 |}x|]|]: {};|>|> }
  // interface J { x: {}; }
  // declare const o: (I | J) & { x: string };
  // o.x;

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) I.x: {}",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "I",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "x",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "{",
      "kind": "punctuation"
     },
     {
      "text": "}",
      "kind": "punctuation"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) x: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "x",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsRootSymbols.ts ===
// interface I { x: {}; }
// interface J { /*FIND ALL REFS*/<|[|{| defId: 0, isDefinition: true |}x|]: {};|> }
// declare const o: (I | J) & { x: string };
// o.[|{| defId: 1 |}x|];

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsRootSymbols.ts ===
  // interface I { <|[|{| defId: 1 |}x|]: {};|> }
  // interface J { /*FIND ALL REFS*/<|[|{| defId: 0 |}x|]: {};|> }
  // declare const o: (I | J) & { x: string };
  // o.x;

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) J.x: {}",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "J",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "x",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "{",
      "kind": "punctuation"
     },
     {
      "text": "}",
      "kind": "punctuation"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) x: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "x",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsRootSymbols.ts ===
// interface I { x: {}; }
// interface J { x: {}; }
// declare const o: (I | J) & { /*FIND ALL REFS*/<|[|{| defId: 0, isWriteAccess: true, isDefinition: true |}x|]: string|> };
// o.[|{| defId: 1 |}x|];

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsRootSymbols.ts ===
  // interface I { <|[|{| defId: 1 |}x|]: {};|> }
  // interface J { x: {}; }
  // declare const o: (I | J) & { /*FIND ALL REFS*/<|[|{| defId: 0 |}x|]: string|> };
  // o.x;

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) x: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "x",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) x: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "x",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsRootSymbols.ts ===
// interface I { <|[|{| defId: 0 |}x|]: {};|> }
// interface J { <|[|{| defId: 1 |}x|]: {};|> }
// declare const o: (I | J) & { <|[|{| defId: 2, isWriteAccess: true |}x|]: string|> };
// o./*FIND ALL REFS*/[|{| defId: 3 |}x|];

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsRootSymbols.ts ===
  // interface I { <|[|{| defId: 0 |}<|[|{| defId: 3 |}x|]|]: {};|>|> }
  // interface J { <|[|{| defId: 1 |}x|]: {};|> }
  // declare const o: (I | J) & { <|[|{| defId: 2 |}x|]: string|> };
  // o./*FIND ALL REFS*/x;

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) I.x: {}",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "I",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "x",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "{",
      "kind": "punctuation"
     },
     {
      "text": "}",
      "kind": "punctuation"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) J.x: {}",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "J",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "x",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "{",
      "kind": "punctuation"
     },
     {
      "text": "}",
      "kind": "punctuation"
     }
    ]
   },
   {
    "defId": 2,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) x: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "x",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 3,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) x: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "x",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   }
  ]