// === findRenameLocations ===
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     /*RENAME*/<|[|prop2RENAME|](): void;|>
// }
// 
// var o1: I = {
//     prop1() { },
//     <|[|prop2RENAME|]() { }|>
// };
// 
// var o2: I = {
//     prop1: () => { },
//     <|[|prop2RENAME|]: () => { }|>
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     <|get [|prop2RENAME|]() { return () => { }; }|>
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     <|set [|prop2RENAME|](v) { }|>
// };
// 
// var o5: I = {
//     "prop1"() { },
//     <|"[|prop2RENAME|]"() { }|>
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     <|"[|prop2RENAME|]": function () { }|>
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     <|["[|prop2RENAME|]"]: function () { }|>
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     <|["[|prop2RENAME|]"]() { }|>
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     <|get ["[|prop2RENAME|]"]() { return () => { }; }|>
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     <|set ["[|prop2RENAME|]"](v) { }|>
// };



// === findRenameLocations ===
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     <|[|prop2RENAME|](): void;|>
// }
// 
// var o1: I = {
//     prop1() { },
//     /*RENAME*/<|[|prop2RENAME|]() { }|>
// };
// 
// var o2: I = {
//     prop1: () => { },
//     <|[|prop2RENAME|]: () => { }|>
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     <|get [|prop2RENAME|]() { return () => { }; }|>
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     <|set [|prop2RENAME|](v) { }|>
// };
// 
// var o5: I = {
//     "prop1"() { },
//     <|"[|prop2RENAME|]"() { }|>
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     <|"[|prop2RENAME|]": function () { }|>
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     <|["[|prop2RENAME|]"]: function () { }|>
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     <|["[|prop2RENAME|]"]() { }|>
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     <|get ["[|prop2RENAME|]"]() { return () => { }; }|>
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     <|set ["[|prop2RENAME|]"](v) { }|>
// };



// === findRenameLocations ===
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     <|[|prop2RENAME|](): void;|>
// }
// 
// var o1: I = {
//     prop1() { },
//     <|[|prop2RENAME|]() { }|>
// };
// 
// var o2: I = {
//     prop1: () => { },
//     /*RENAME*/<|[|prop2RENAME|]: () => { }|>
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     <|get [|prop2RENAME|]() { return () => { }; }|>
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     <|set [|prop2RENAME|](v) { }|>
// };
// 
// var o5: I = {
//     "prop1"() { },
//     <|"[|prop2RENAME|]"() { }|>
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     <|"[|prop2RENAME|]": function () { }|>
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     <|["[|prop2RENAME|]"]: function () { }|>
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     <|["[|prop2RENAME|]"]() { }|>
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     <|get ["[|prop2RENAME|]"]() { return () => { }; }|>
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     <|set ["[|prop2RENAME|]"](v) { }|>
// };



// === findRenameLocations ===
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     <|[|prop2RENAME|](): void;|>
// }
// 
// var o1: I = {
//     prop1() { },
//     <|[|prop2RENAME|]() { }|>
// };
// 
// var o2: I = {
//     prop1: () => { },
//     <|[|prop2RENAME|]: () => { }|>
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     <|get /*RENAME*/[|prop2RENAME|]() { return () => { }; }|>
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     <|set [|prop2RENAME|](v) { }|>
// };
// 
// var o5: I = {
//     "prop1"() { },
//     <|"[|prop2RENAME|]"() { }|>
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     <|"[|prop2RENAME|]": function () { }|>
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     <|["[|prop2RENAME|]"]: function () { }|>
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     <|["[|prop2RENAME|]"]() { }|>
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     <|get ["[|prop2RENAME|]"]() { return () => { }; }|>
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     <|set ["[|prop2RENAME|]"](v) { }|>
// };



// === findRenameLocations ===
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     <|[|prop2RENAME|](): void;|>
// }
// 
// var o1: I = {
//     prop1() { },
//     <|[|prop2RENAME|]() { }|>
// };
// 
// var o2: I = {
//     prop1: () => { },
//     <|[|prop2RENAME|]: () => { }|>
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     <|get [|prop2RENAME|]() { return () => { }; }|>
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     <|set /*RENAME*/[|prop2RENAME|](v) { }|>
// };
// 
// var o5: I = {
//     "prop1"() { },
//     <|"[|prop2RENAME|]"() { }|>
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     <|"[|prop2RENAME|]": function () { }|>
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     <|["[|prop2RENAME|]"]: function () { }|>
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     <|["[|prop2RENAME|]"]() { }|>
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     <|get ["[|prop2RENAME|]"]() { return () => { }; }|>
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     <|set ["[|prop2RENAME|]"](v) { }|>
// };



// === findRenameLocations ===
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     <|[|prop2RENAME|](): void;|>
// }
// 
// var o1: I = {
//     prop1() { },
//     <|[|prop2RENAME|]() { }|>
// };
// 
// var o2: I = {
//     prop1: () => { },
//     <|[|prop2RENAME|]: () => { }|>
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     <|get [|prop2RENAME|]() { return () => { }; }|>
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     <|set [|prop2RENAME|](v) { }|>
// };
// 
// var o5: I = {
//     "prop1"() { },
//     <|"/*RENAME*/[|prop2RENAME|]"() { }|>
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     <|"[|prop2RENAME|]": function () { }|>
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     <|["[|prop2RENAME|]"]: function () { }|>
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     <|["[|prop2RENAME|]"]() { }|>
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     <|get ["[|prop2RENAME|]"]() { return () => { }; }|>
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     <|set ["[|prop2RENAME|]"](v) { }|>
// };



// === findRenameLocations ===
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     <|[|prop2RENAME|](): void;|>
// }
// 
// var o1: I = {
//     prop1() { },
//     <|[|prop2RENAME|]() { }|>
// };
// 
// var o2: I = {
//     prop1: () => { },
//     <|[|prop2RENAME|]: () => { }|>
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     <|get [|prop2RENAME|]() { return () => { }; }|>
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     <|set [|prop2RENAME|](v) { }|>
// };
// 
// var o5: I = {
//     "prop1"() { },
//     <|"[|prop2RENAME|]"() { }|>
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     <|"/*RENAME*/[|prop2RENAME|]": function () { }|>
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     <|["[|prop2RENAME|]"]: function () { }|>
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     <|["[|prop2RENAME|]"]() { }|>
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     <|get ["[|prop2RENAME|]"]() { return () => { }; }|>
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     <|set ["[|prop2RENAME|]"](v) { }|>
// };



// === findRenameLocations ===
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     <|[|prop2RENAME|](): void;|>
// }
// 
// var o1: I = {
//     prop1() { },
//     <|[|prop2RENAME|]() { }|>
// };
// 
// var o2: I = {
//     prop1: () => { },
//     <|[|prop2RENAME|]: () => { }|>
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     <|get [|prop2RENAME|]() { return () => { }; }|>
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     <|set [|prop2RENAME|](v) { }|>
// };
// 
// var o5: I = {
//     "prop1"() { },
//     <|"[|prop2RENAME|]"() { }|>
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     <|"[|prop2RENAME|]": function () { }|>
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     <|["/*RENAME*/[|prop2RENAME|]"]: function () { }|>
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     <|["[|prop2RENAME|]"]() { }|>
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     <|get ["[|prop2RENAME|]"]() { return () => { }; }|>
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     <|set ["[|prop2RENAME|]"](v) { }|>
// };



// === findRenameLocations ===
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     <|[|prop2RENAME|](): void;|>
// }
// 
// var o1: I = {
//     prop1() { },
//     <|[|prop2RENAME|]() { }|>
// };
// 
// var o2: I = {
//     prop1: () => { },
//     <|[|prop2RENAME|]: () => { }|>
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     <|get [|prop2RENAME|]() { return () => { }; }|>
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     <|set [|prop2RENAME|](v) { }|>
// };
// 
// var o5: I = {
//     "prop1"() { },
//     <|"[|prop2RENAME|]"() { }|>
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     <|"[|prop2RENAME|]": function () { }|>
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     <|["[|prop2RENAME|]"]: function () { }|>
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     <|["/*RENAME*/[|prop2RENAME|]"]() { }|>
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     <|get ["[|prop2RENAME|]"]() { return () => { }; }|>
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     <|set ["[|prop2RENAME|]"](v) { }|>
// };



// === findRenameLocations ===
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     <|[|prop2RENAME|](): void;|>
// }
// 
// var o1: I = {
//     prop1() { },
//     <|[|prop2RENAME|]() { }|>
// };
// 
// var o2: I = {
//     prop1: () => { },
//     <|[|prop2RENAME|]: () => { }|>
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     <|get [|prop2RENAME|]() { return () => { }; }|>
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     <|set [|prop2RENAME|](v) { }|>
// };
// 
// var o5: I = {
//     "prop1"() { },
//     <|"[|prop2RENAME|]"() { }|>
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     <|"[|prop2RENAME|]": function () { }|>
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     <|["[|prop2RENAME|]"]: function () { }|>
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     <|["[|prop2RENAME|]"]() { }|>
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     <|get ["/*RENAME*/[|prop2RENAME|]"]() { return () => { }; }|>
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     <|set ["[|prop2RENAME|]"](v) { }|>
// };



// === findRenameLocations ===
// === /tests/cases/fourslash/renameContextuallyTypedProperties2.ts ===
// interface I {
//     prop1: () => void;
//     <|[|prop2RENAME|](): void;|>
// }
// 
// var o1: I = {
//     prop1() { },
//     <|[|prop2RENAME|]() { }|>
// };
// 
// var o2: I = {
//     prop1: () => { },
//     <|[|prop2RENAME|]: () => { }|>
// };
// 
// var o3: I = {
//     get prop1() { return () => { }; },
//     <|get [|prop2RENAME|]() { return () => { }; }|>
// };
// 
// var o4: I = {
//     set prop1(v) { },
//     <|set [|prop2RENAME|](v) { }|>
// };
// 
// var o5: I = {
//     "prop1"() { },
//     <|"[|prop2RENAME|]"() { }|>
// };
// 
// var o6: I = {
//     "prop1": function () { },
//     <|"[|prop2RENAME|]": function () { }|>
// };
// 
// var o7: I = {
//     ["prop1"]: function () { },
//     <|["[|prop2RENAME|]"]: function () { }|>
// };
// 
// var o8: I = {
//     ["prop1"]() { },
//     <|["[|prop2RENAME|]"]() { }|>
// };
// 
// var o9: I = {
//     get ["prop1"]() { return () => { }; },
//     <|get ["[|prop2RENAME|]"]() { return () => { }; }|>
// };
// 
// var o10: I = {
//     set ["prop1"](v) { },
//     <|set ["/*RENAME*/[|prop2RENAME|]"](v) { }|>
// };