// === findAllReferences ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 8) skipped ---
//     propString: string
//     optional?: boolean
// }
// /*FIND ALL REFS*/<|declare function [|{| isWriteAccess: true, isDefinition: true |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <|<[|Opt|] />|>;
// let opt1 = <|<[|Opt|] propx={100} propString />|>;
// let opt2 = <|<[|Opt|] propx={100} optional/>|>;
// let opt3 = <|<[|Opt|] wrong />|>;
// let opt4 = <|<[|Opt|] propx={100} propString="hi" />|>;

  // === Definitions ===
  // === /tests/cases/fourslash/file.tsx ===
  // --- (line: 8) skipped ---
  //     propString: string
  //     optional?: boolean
  // }
  // /*FIND ALL REFS*/<|declare function [|Opt|](attributes: OptionPropBag): JSX.Element;|>
  // let opt = <Opt />;
  // let opt1 = <Opt propx={100} propString />;
  // let opt2 = <Opt propx={100} optional/>;
  // let opt3 = <Opt wrong />;
  // let opt4 = <Opt propx={100} propString="hi" />;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "function Opt(attributes: OptionPropBag): JSX.Element",
    "displayParts": [
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Opt",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "attributes",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "OptionPropBag",
      "kind": "interfaceName"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "JSX",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Element",
      "kind": "text"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 8) skipped ---
//     propString: string
//     optional?: boolean
// }
// <|declare function /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <|<[|Opt|] />|>;
// let opt1 = <|<[|Opt|] propx={100} propString />|>;
// let opt2 = <|<[|Opt|] propx={100} optional/>|>;
// let opt3 = <|<[|Opt|] wrong />|>;
// let opt4 = <|<[|Opt|] propx={100} propString="hi" />|>;

  // === Definitions ===
  // === /tests/cases/fourslash/file.tsx ===
  // --- (line: 8) skipped ---
  //     propString: string
  //     optional?: boolean
  // }
  // <|declare function /*FIND ALL REFS*/[|Opt|](attributes: OptionPropBag): JSX.Element;|>
  // let opt = <Opt />;
  // let opt1 = <Opt propx={100} propString />;
  // let opt2 = <Opt propx={100} optional/>;
  // let opt3 = <Opt wrong />;
  // let opt4 = <Opt propx={100} propString="hi" />;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "function Opt(attributes: OptionPropBag): JSX.Element",
    "displayParts": [
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Opt",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "attributes",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "OptionPropBag",
      "kind": "interfaceName"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "JSX",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Element",
      "kind": "text"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 9) skipped ---
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = /*FIND ALL REFS*/<Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
// let opt4 = <Opt propx={100} propString="hi" />;



// === findAllReferences ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 8) skipped ---
//     propString: string
//     optional?: boolean
// }
// <|declare function [|{| isWriteAccess: true |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <|</*FIND ALL REFS*/[|Opt|] />|>;
// let opt1 = <|<[|Opt|] propx={100} propString />|>;
// let opt2 = <|<[|Opt|] propx={100} optional/>|>;
// let opt3 = <|<[|Opt|] wrong />|>;
// let opt4 = <|<[|Opt|] propx={100} propString="hi" />|>;

  // === Definitions ===
  // === /tests/cases/fourslash/file.tsx ===
  // --- (line: 8) skipped ---
  //     propString: string
  //     optional?: boolean
  // }
  // <|declare function [|Opt|](attributes: OptionPropBag): JSX.Element;|>
  // let opt = </*FIND ALL REFS*/Opt />;
  // let opt1 = <Opt propx={100} propString />;
  // let opt2 = <Opt propx={100} optional/>;
  // let opt3 = <Opt wrong />;
  // let opt4 = <Opt propx={100} propString="hi" />;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "function Opt(attributes: OptionPropBag): JSX.Element",
    "displayParts": [
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Opt",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "attributes",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "OptionPropBag",
      "kind": "interfaceName"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "JSX",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Element",
      "kind": "text"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 10) skipped ---
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = /*FIND ALL REFS*/<Opt propx={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
// let opt4 = <Opt propx={100} propString="hi" />;



// === findAllReferences ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 8) skipped ---
//     propString: string
//     optional?: boolean
// }
// <|declare function [|{| isWriteAccess: true |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <|<[|Opt|] />|>;
// let opt1 = <|</*FIND ALL REFS*/[|Opt|] propx={100} propString />|>;
// let opt2 = <|<[|Opt|] propx={100} optional/>|>;
// let opt3 = <|<[|Opt|] wrong />|>;
// let opt4 = <|<[|Opt|] propx={100} propString="hi" />|>;

  // === Definitions ===
  // === /tests/cases/fourslash/file.tsx ===
  // --- (line: 8) skipped ---
  //     propString: string
  //     optional?: boolean
  // }
  // <|declare function [|Opt|](attributes: OptionPropBag): JSX.Element;|>
  // let opt = <Opt />;
  // let opt1 = </*FIND ALL REFS*/Opt propx={100} propString />;
  // let opt2 = <Opt propx={100} optional/>;
  // let opt3 = <Opt wrong />;
  // let opt4 = <Opt propx={100} propString="hi" />;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "function Opt(attributes: OptionPropBag): JSX.Element",
    "displayParts": [
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Opt",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "attributes",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "OptionPropBag",
      "kind": "interfaceName"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "JSX",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Element",
      "kind": "text"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 11) skipped ---
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = /*FIND ALL REFS*/<Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
// let opt4 = <Opt propx={100} propString="hi" />;



// === findAllReferences ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 8) skipped ---
//     propString: string
//     optional?: boolean
// }
// <|declare function [|{| isWriteAccess: true |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <|<[|Opt|] />|>;
// let opt1 = <|<[|Opt|] propx={100} propString />|>;
// let opt2 = <|</*FIND ALL REFS*/[|Opt|] propx={100} optional/>|>;
// let opt3 = <|<[|Opt|] wrong />|>;
// let opt4 = <|<[|Opt|] propx={100} propString="hi" />|>;

  // === Definitions ===
  // === /tests/cases/fourslash/file.tsx ===
  // --- (line: 8) skipped ---
  //     propString: string
  //     optional?: boolean
  // }
  // <|declare function [|Opt|](attributes: OptionPropBag): JSX.Element;|>
  // let opt = <Opt />;
  // let opt1 = <Opt propx={100} propString />;
  // let opt2 = </*FIND ALL REFS*/Opt propx={100} optional/>;
  // let opt3 = <Opt wrong />;
  // let opt4 = <Opt propx={100} propString="hi" />;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "function Opt(attributes: OptionPropBag): JSX.Element",
    "displayParts": [
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Opt",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "attributes",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "OptionPropBag",
      "kind": "interfaceName"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "JSX",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Element",
      "kind": "text"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 12) skipped ---
// let opt = <Opt />;
// let opt1 = <Opt propx={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = /*FIND ALL REFS*/<Opt wrong />;
// let opt4 = <Opt propx={100} propString="hi" />;



// === findAllReferences ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 8) skipped ---
//     propString: string
//     optional?: boolean
// }
// <|declare function [|{| isWriteAccess: true |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <|<[|Opt|] />|>;
// let opt1 = <|<[|Opt|] propx={100} propString />|>;
// let opt2 = <|<[|Opt|] propx={100} optional/>|>;
// let opt3 = <|</*FIND ALL REFS*/[|Opt|] wrong />|>;
// let opt4 = <|<[|Opt|] propx={100} propString="hi" />|>;

  // === Definitions ===
  // === /tests/cases/fourslash/file.tsx ===
  // --- (line: 8) skipped ---
  //     propString: string
  //     optional?: boolean
  // }
  // <|declare function [|Opt|](attributes: OptionPropBag): JSX.Element;|>
  // let opt = <Opt />;
  // let opt1 = <Opt propx={100} propString />;
  // let opt2 = <Opt propx={100} optional/>;
  // let opt3 = </*FIND ALL REFS*/Opt wrong />;
  // let opt4 = <Opt propx={100} propString="hi" />;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "function Opt(attributes: OptionPropBag): JSX.Element",
    "displayParts": [
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Opt",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "attributes",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "OptionPropBag",
      "kind": "interfaceName"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "JSX",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Element",
      "kind": "text"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 13) skipped ---
// let opt1 = <Opt propx={100} propString />;
// let opt2 = <Opt propx={100} optional/>;
// let opt3 = <Opt wrong />;
// let opt4 = /*FIND ALL REFS*/<Opt propx={100} propString="hi" />;



// === findAllReferences ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 8) skipped ---
//     propString: string
//     optional?: boolean
// }
// <|declare function [|{| isWriteAccess: true |}Opt|](attributes: OptionPropBag): JSX.Element;|>
// let opt = <|<[|Opt|] />|>;
// let opt1 = <|<[|Opt|] propx={100} propString />|>;
// let opt2 = <|<[|Opt|] propx={100} optional/>|>;
// let opt3 = <|<[|Opt|] wrong />|>;
// let opt4 = <|</*FIND ALL REFS*/[|Opt|] propx={100} propString="hi" />|>;

  // === Definitions ===
  // === /tests/cases/fourslash/file.tsx ===
  // --- (line: 8) skipped ---
  //     propString: string
  //     optional?: boolean
  // }
  // <|declare function [|Opt|](attributes: OptionPropBag): JSX.Element;|>
  // let opt = <Opt />;
  // let opt1 = <Opt propx={100} propString />;
  // let opt2 = <Opt propx={100} optional/>;
  // let opt3 = <Opt wrong />;
  // let opt4 = </*FIND ALL REFS*/Opt propx={100} propString="hi" />;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "function Opt(attributes: OptionPropBag): JSX.Element",
    "displayParts": [
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Opt",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "attributes",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "OptionPropBag",
      "kind": "interfaceName"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "JSX",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Element",
      "kind": "text"
     }
    ]
   }
  ]