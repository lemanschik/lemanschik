// === findAllReferences ===
// === /leafModule.ts ===
// <|export const /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}hello|] = () => 'Hello';|>

// === /importing.ts ===
// import { Leaf } from './exporting';
// Leaf.[|hello|]()

  // === Definitions ===
  // === /leafModule.ts ===
  // <|export const /*FIND ALL REFS*/[|hello|] = () => 'Hello';|>

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "const",
    "name": "const hello: () => string",
    "displayParts": [
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "hello",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=>",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /leafModule.ts ===
// <|export const [|{| isWriteAccess: true |}hello|] = () => 'Hello';|>

// === /importing.ts ===
// import { Leaf } from './exporting';
// Leaf./*FIND ALL REFS*/[|hello|]()

  // === Definitions ===
  // === /leafModule.ts ===
  // <|export const [|hello|] = () => 'Hello';|>

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "const",
    "name": "const hello: () => string",
    "displayParts": [
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "hello",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=>",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /exporting.ts ===
// <|export * as /*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true, isDefinition: true |}Leaf|] from './leafModule';|>

// === /importing.ts ===
// <|import { [|{| defId: 1, isWriteAccess: true |}Leaf|] } from './exporting';|>
// [|{| defId: 1 |}Leaf|].hello()

  // === Definitions ===
  // === /exporting.ts ===
  // <|export * as /*FIND ALL REFS*/[|{| defId: 0 |}Leaf|] from './leafModule';|>

  // === /importing.ts ===
  // <|import { [|{| defId: 1 |}Leaf|] } from './exporting';|>
  // Leaf.hello()

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "import Leaf",
    "displayParts": [
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Leaf",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "import Leaf",
    "displayParts": [
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Leaf",
      "kind": "aliasName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /importing.ts ===
// <|import { /*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true, isDefinition: true |}Leaf|] } from './exporting';|>
// [|{| defId: 0 |}Leaf|].hello()

// === /exporting.ts ===
// <|export * as [|{| defId: 1, isWriteAccess: true |}Leaf|] from './leafModule';|>

  // === Definitions ===
  // === /importing.ts ===
  // <|import { /*FIND ALL REFS*/[|{| defId: 0 |}Leaf|] } from './exporting';|>
  // Leaf.hello()

  // === /exporting.ts ===
  // <|export * as [|{| defId: 1 |}Leaf|] from './leafModule';|>

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "import Leaf",
    "displayParts": [
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Leaf",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "import Leaf",
    "displayParts": [
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Leaf",
      "kind": "aliasName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /importing.ts ===
// <|import { [|{| defId: 0, isWriteAccess: true |}Leaf|] } from './exporting';|>
// /*FIND ALL REFS*/[|{| defId: 0 |}Leaf|].hello()

// === /exporting.ts ===
// <|export * as [|{| defId: 1, isWriteAccess: true |}Leaf|] from './leafModule';|>

  // === Definitions ===
  // === /importing.ts ===
  // <|import { [|{| defId: 0 |}Leaf|] } from './exporting';|>
  // /*FIND ALL REFS*/Leaf.hello()

  // === /exporting.ts ===
  // <|export * as [|{| defId: 1 |}Leaf|] from './leafModule';|>

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "import Leaf",
    "displayParts": [
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Leaf",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "import Leaf",
    "displayParts": [
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Leaf",
      "kind": "aliasName"
     }
    ]
   }
  ]