// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// /*FIND ALL REFS*/<|interface [|{| isWriteAccess: true, isDefinition: true |}Foo|] {
// }|>
// 
// module Foo {
//     export interface Bar { }
// }
// 
// function Foo(): void {
// }
// 
// var f1: Foo.Bar;
// var f2: [|Foo|];
// Foo.bind(this);

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
  // /*FIND ALL REFS*/interface Foo {
  // }
  // 
  // module Foo {
  //     export interface Bar { }
  // }
  // 
  // <|function [|Foo|](): void {
  // }|>
  // 
  // var f1: Foo.Bar;
  // var f2: Foo;
  // Foo.bind(this);

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "interface Foo\nnamespace Foo",
    "displayParts": [
     {
      "text": "interface",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "functionName"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "functionName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// <|interface /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}Foo|] {
// }|>
// 
// module Foo {
//     export interface Bar { }
// }
// 
// function Foo(): void {
// }
// 
// var f1: Foo.Bar;
// var f2: [|Foo|];
// Foo.bind(this);

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
  // interface /*FIND ALL REFS*/Foo {
  // }
  // 
  // module Foo {
  //     export interface Bar { }
  // }
  // 
  // <|function [|Foo|](): void {
  // }|>
  // 
  // var f1: Foo.Bar;
  // var f2: Foo;
  // Foo.bind(this);

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "interface Foo\nnamespace Foo",
    "displayParts": [
     {
      "text": "interface",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "functionName"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "functionName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// interface Foo {
// }
// 
// /*FIND ALL REFS*/<|module [|{| isWriteAccess: true, isDefinition: true |}Foo|] {
//     export interface Bar { }
// }|>
// 
// function Foo(): void {
// }
// 
// var f1: [|Foo|].Bar;
// var f2: Foo;
// Foo.bind(this);

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
  // interface Foo {
  // }
  // 
  // /*FIND ALL REFS*/module Foo {
  //     export interface Bar { }
  // }
  // 
  // <|function [|Foo|](): void {
  // }|>
  // 
  // var f1: Foo.Bar;
  // var f2: Foo;
  // Foo.bind(this);

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "namespace Foo",
    "displayParts": [
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "functionName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// interface Foo {
// }
// 
// <|module /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}Foo|] {
//     export interface Bar { }
// }|>
// 
// function Foo(): void {
// }
// 
// var f1: [|Foo|].Bar;
// var f2: Foo;
// Foo.bind(this);

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
  // interface Foo {
  // }
  // 
  // module /*FIND ALL REFS*/Foo {
  //     export interface Bar { }
  // }
  // 
  // <|function [|Foo|](): void {
  // }|>
  // 
  // var f1: Foo.Bar;
  // var f2: Foo;
  // Foo.bind(this);

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "namespace Foo",
    "displayParts": [
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "functionName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// --- (line: 4) skipped ---
//     export interface Bar { }
// }
// 
// /*FIND ALL REFS*/<|function [|{| isWriteAccess: true, isDefinition: true |}Foo|](): void {
// }|>
// 
// var f1: Foo.Bar;
// var f2: Foo;
// [|Foo|].bind(this);

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
  // --- (line: 4) skipped ---
  //     export interface Bar { }
  // }
  // 
  // /*FIND ALL REFS*/<|function [|Foo|](): void {
  // }|>
  // 
  // var f1: Foo.Bar;
  // var f2: Foo;
  // Foo.bind(this);

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "namespace Foo\nfunction Foo(): void",
    "displayParts": [
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "functionName"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// --- (line: 4) skipped ---
//     export interface Bar { }
// }
// 
// <|function /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}Foo|](): void {
// }|>
// 
// var f1: Foo.Bar;
// var f2: Foo;
// [|Foo|].bind(this);

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
  // --- (line: 4) skipped ---
  //     export interface Bar { }
  // }
  // 
  // <|function /*FIND ALL REFS*/[|Foo|](): void {
  // }|>
  // 
  // var f1: Foo.Bar;
  // var f2: Foo;
  // Foo.bind(this);

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "namespace Foo\nfunction Foo(): void",
    "displayParts": [
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "functionName"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// interface Foo {
// }
// 
// <|module [|{| isWriteAccess: true |}Foo|] {
//     export interface Bar { }
// }|>
// 
// function Foo(): void {
// }
// 
// var f1: /*FIND ALL REFS*/[|Foo|].Bar;
// var f2: Foo;
// Foo.bind(this);

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
  // --- (line: 4) skipped ---
  //     export interface Bar { }
  // }
  // 
  // <|function [|Foo|](): void {
  // }|>
  // 
  // var f1: /*FIND ALL REFS*/Foo.Bar;
  // var f2: Foo;
  // Foo.bind(this);

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "namespace Foo",
    "displayParts": [
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "functionName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// <|interface [|{| isWriteAccess: true |}Foo|] {
// }|>
// 
// module Foo {
//     export interface Bar { }
// }
// 
// function Foo(): void {
// }
// 
// var f1: Foo.Bar;
// var f2: /*FIND ALL REFS*/[|Foo|];
// Foo.bind(this);

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
  // --- (line: 4) skipped ---
  //     export interface Bar { }
  // }
  // 
  // <|function [|Foo|](): void {
  // }|>
  // 
  // var f1: Foo.Bar;
  // var f2: /*FIND ALL REFS*/Foo;
  // Foo.bind(this);

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "interface Foo\nnamespace Foo",
    "displayParts": [
     {
      "text": "interface",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "functionName"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "functionName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
// --- (line: 4) skipped ---
//     export interface Bar { }
// }
// 
// <|function [|{| isWriteAccess: true |}Foo|](): void {
// }|>
// 
// var f1: Foo.Bar;
// var f2: Foo;
// /*FIND ALL REFS*/[|Foo|].bind(this);

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations.ts ===
  // --- (line: 4) skipped ---
  //     export interface Bar { }
  // }
  // 
  // <|function [|Foo|](): void {
  // }|>
  // 
  // var f1: Foo.Bar;
  // var f2: Foo;
  // /*FIND ALL REFS*/Foo.bind(this);

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "namespace Foo\nfunction Foo(): void",
    "displayParts": [
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "functionName"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Foo",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]