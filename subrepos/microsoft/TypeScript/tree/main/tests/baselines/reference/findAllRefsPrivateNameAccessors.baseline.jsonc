// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
// class C {
//     /*FIND ALL REFS*/<|get [|{| isWriteAccess: true, isDefinition: true |}#foo|](){ return 1; }|>
//     <|set [|{| isWriteAccess: true, isDefinition: true |}#foo|](value: number){  }|>
//     constructor() {
//         this.[|#foo|]();
//     }
// }
// class D extends C {
// --- (line: 9) skipped ---

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
  // class C {
  //     /*FIND ALL REFS*/<|get [|#foo|](){ return 1; }|>
  //     set #foo(value: number){  }
  //     constructor() {
  //         this.#foo();
  // --- (line: 6) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) C.#foo: number",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "#foo",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
// class C {
//     <|get /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}#foo|](){ return 1; }|>
//     <|set [|{| isWriteAccess: true, isDefinition: true |}#foo|](value: number){  }|>
//     constructor() {
//         this.[|#foo|]();
//     }
// }
// class D extends C {
// --- (line: 9) skipped ---

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
  // class C {
  //     <|get /*FIND ALL REFS*/[|#foo|](){ return 1; }|>
  //     set #foo(value: number){  }
  //     constructor() {
  //         this.#foo();
  // --- (line: 6) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) C.#foo: number",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "#foo",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
// class C {
//     <|get [|{| isWriteAccess: true, isDefinition: true |}#foo|](){ return 1; }|>
//     /*FIND ALL REFS*/<|set [|{| isWriteAccess: true, isDefinition: true |}#foo|](value: number){  }|>
//     constructor() {
//         this.[|#foo|]();
//     }
// }
// class D extends C {
// --- (line: 9) skipped ---

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
  // class C {
  //     <|get [|#foo|](){ return 1; }|>
  //     /*FIND ALL REFS*/set #foo(value: number){  }
  //     constructor() {
  //         this.#foo();
  //     }
  // --- (line: 7) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) C.#foo: number",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "#foo",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
// class C {
//     <|get [|{| isWriteAccess: true, isDefinition: true |}#foo|](){ return 1; }|>
//     <|set /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}#foo|](value: number){  }|>
//     constructor() {
//         this.[|#foo|]();
//     }
// }
// class D extends C {
// --- (line: 9) skipped ---

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
  // class C {
  //     <|get [|#foo|](){ return 1; }|>
  //     set /*FIND ALL REFS*/#foo(value: number){  }
  //     constructor() {
  //         this.#foo();
  //     }
  // --- (line: 7) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) C.#foo: number",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "#foo",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
// class C {
//     <|get [|{| isWriteAccess: true |}#foo|](){ return 1; }|>
//     <|set [|{| isWriteAccess: true |}#foo|](value: number){  }|>
//     constructor() {
//         this./*FIND ALL REFS*/[|#foo|]();
//     }
// }
// class D extends C {
// --- (line: 9) skipped ---

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
  // class C {
  //     <|get [|#foo|](){ return 1; }|>
  //     set #foo(value: number){  }
  //     constructor() {
  //         this./*FIND ALL REFS*/#foo();
  //     }
  // }
  // class D extends C {
  // --- (line: 9) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) C.#foo: number",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "#foo",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
// --- (line: 11) skipped ---
//     }
// }
// class E {
//     /*FIND ALL REFS*/<|get [|{| isWriteAccess: true, isDefinition: true |}#foo|](){ return 1; }|>
//     <|set [|{| isWriteAccess: true, isDefinition: true |}#foo|](value: number){  }|>
//     constructor() {
//         this.[|#foo|]();
//     }
// }

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
  // --- (line: 11) skipped ---
  //     }
  // }
  // class E {
  //     /*FIND ALL REFS*/<|get [|#foo|](){ return 1; }|>
  //     set #foo(value: number){  }
  //     constructor() {
  //         this.#foo();
  //     }
  // }

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) E.#foo: number",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "E",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "#foo",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
// --- (line: 11) skipped ---
//     }
// }
// class E {
//     <|get /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}#foo|](){ return 1; }|>
//     <|set [|{| isWriteAccess: true, isDefinition: true |}#foo|](value: number){  }|>
//     constructor() {
//         this.[|#foo|]();
//     }
// }

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
  // --- (line: 11) skipped ---
  //     }
  // }
  // class E {
  //     <|get /*FIND ALL REFS*/[|#foo|](){ return 1; }|>
  //     set #foo(value: number){  }
  //     constructor() {
  //         this.#foo();
  //     }
  // }

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) E.#foo: number",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "E",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "#foo",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
// --- (line: 11) skipped ---
//     }
// }
// class E {
//     <|get [|{| isWriteAccess: true, isDefinition: true |}#foo|](){ return 1; }|>
//     /*FIND ALL REFS*/<|set [|{| isWriteAccess: true, isDefinition: true |}#foo|](value: number){  }|>
//     constructor() {
//         this.[|#foo|]();
//     }
// }

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
  // --- (line: 11) skipped ---
  //     }
  // }
  // class E {
  //     <|get [|#foo|](){ return 1; }|>
  //     /*FIND ALL REFS*/set #foo(value: number){  }
  //     constructor() {
  //         this.#foo();
  //     }
  // }

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) E.#foo: number",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "E",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "#foo",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
// --- (line: 11) skipped ---
//     }
// }
// class E {
//     <|get [|{| isWriteAccess: true, isDefinition: true |}#foo|](){ return 1; }|>
//     <|set /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}#foo|](value: number){  }|>
//     constructor() {
//         this.[|#foo|]();
//     }
// }

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
  // --- (line: 11) skipped ---
  //     }
  // }
  // class E {
  //     <|get [|#foo|](){ return 1; }|>
  //     set /*FIND ALL REFS*/#foo(value: number){  }
  //     constructor() {
  //         this.#foo();
  //     }
  // }

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) E.#foo: number",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "E",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "#foo",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
// --- (line: 11) skipped ---
//     }
// }
// class E {
//     <|get [|{| isWriteAccess: true |}#foo|](){ return 1; }|>
//     <|set [|{| isWriteAccess: true |}#foo|](value: number){  }|>
//     constructor() {
//         this./*FIND ALL REFS*/[|#foo|]();
//     }
// }

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsPrivateNameAccessors.ts ===
  // --- (line: 11) skipped ---
  //     }
  // }
  // class E {
  //     <|get [|#foo|](){ return 1; }|>
  //     set #foo(value: number){  }
  //     constructor() {
  //         this./*FIND ALL REFS*/#foo();
  //     }
  // }

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) E.#foo: number",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "E",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "#foo",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   }
  ]