// === findAllReferences ===
// === /tests/cases/fourslash/referencesForPropertiesOfGenericType.ts ===
// interface IFoo<T> {
//     /*FIND ALL REFS*/<|[|{| isDefinition: true |}doSomething|](v: T): T;|>
// }
// 
// var x: IFoo<string>;
// x.[|doSomething|]("ss");
// 
// var y: IFoo<number>;
// y.[|doSomething|](12);

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForPropertiesOfGenericType.ts ===
  // interface IFoo<T> {
  //     /*FIND ALL REFS*/<|[|doSomething|](v: T): T;|>
  // }
  // 
  // var x: IFoo<string>;
  // --- (line: 6) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) IFoo<T>.doSomething(v: T): T",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "IFoo",
      "kind": "interfaceName"
     },
     {
      "text": "<",
      "kind": "punctuation"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": ">",
      "kind": "punctuation"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "doSomething",
      "kind": "methodName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "v",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForPropertiesOfGenericType.ts ===
// interface IFoo<T> {
//     <|[|doSomething|](v: T): T;|>
// }
// 
// var x: IFoo<string>;
// x./*FIND ALL REFS*/[|doSomething|]("ss");
// 
// var y: IFoo<number>;
// y.[|doSomething|](12);

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForPropertiesOfGenericType.ts ===
  // interface IFoo<T> {
  //     <|[|doSomething|](v: T): T;|>
  // }
  // 
  // var x: IFoo<string>;
  // x./*FIND ALL REFS*/doSomething("ss");
  // 
  // var y: IFoo<number>;
  // y.doSomething(12);

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) IFoo<T>.doSomething(v: T): T",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "IFoo",
      "kind": "interfaceName"
     },
     {
      "text": "<",
      "kind": "punctuation"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": ">",
      "kind": "punctuation"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "doSomething",
      "kind": "methodName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "v",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForPropertiesOfGenericType.ts ===
// interface IFoo<T> {
//     <|[|doSomething|](v: T): T;|>
// }
// 
// var x: IFoo<string>;
// x.[|doSomething|]("ss");
// 
// var y: IFoo<number>;
// y./*FIND ALL REFS*/[|doSomething|](12);

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForPropertiesOfGenericType.ts ===
  // interface IFoo<T> {
  //     <|[|doSomething|](v: T): T;|>
  // }
  // 
  // var x: IFoo<string>;
  // x.doSomething("ss");
  // 
  // var y: IFoo<number>;
  // y./*FIND ALL REFS*/doSomething(12);

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) IFoo<T>.doSomething(v: T): T",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "IFoo",
      "kind": "interfaceName"
     },
     {
      "text": "<",
      "kind": "punctuation"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": ">",
      "kind": "punctuation"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "doSomething",
      "kind": "methodName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "v",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     }
    ]
   }
  ]