// === findAllReferences ===
// === /tests/cases/fourslash/referencesForInheritedProperties4.ts ===
// class class1 extends class1 {
//    /*FIND ALL REFS*/<|[|{| isWriteAccess: true, isDefinition: true |}doStuff|]() { }|>
//    propName: string;
// }
// 
// var c: class1;
// c.[|doStuff|]();
// c.propName;

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForInheritedProperties4.ts ===
  // class class1 extends class1 {
  //    /*FIND ALL REFS*/<|[|doStuff|]() { }|>
  //    propName: string;
  // }
  // 
  // --- (line: 6) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) class1.doStuff(): void",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "class1",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "doStuff",
      "kind": "methodName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForInheritedProperties4.ts ===
// class class1 extends class1 {
//    doStuff() { }
//    /*FIND ALL REFS*/<|[|{| isDefinition: true |}propName|]: string;|>
// }
// 
// var c: class1;
// c.doStuff();
// c.[|propName|];

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForInheritedProperties4.ts ===
  // class class1 extends class1 {
  //    doStuff() { }
  //    /*FIND ALL REFS*/<|[|propName|]: string;|>
  // }
  // 
  // var c: class1;
  // c.doStuff();
  // c.propName;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) class1.propName: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "class1",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "propName",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForInheritedProperties4.ts ===
// class class1 extends class1 {
//    <|[|{| isWriteAccess: true |}doStuff|]() { }|>
//    propName: string;
// }
// 
// var c: class1;
// c./*FIND ALL REFS*/[|doStuff|]();
// c.propName;

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForInheritedProperties4.ts ===
  // class class1 extends class1 {
  //    <|[|doStuff|]() { }|>
  //    propName: string;
  // }
  // 
  // var c: class1;
  // c./*FIND ALL REFS*/doStuff();
  // c.propName;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) class1.doStuff(): void",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "class1",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "doStuff",
      "kind": "methodName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForInheritedProperties4.ts ===
// class class1 extends class1 {
//    doStuff() { }
//    <|[|propName|]: string;|>
// }
// 
// var c: class1;
// c.doStuff();
// c./*FIND ALL REFS*/[|propName|];

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForInheritedProperties4.ts ===
  // class class1 extends class1 {
  //    doStuff() { }
  //    <|[|propName|]: string;|>
  // }
  // 
  // var c: class1;
  // c.doStuff();
  // c./*FIND ALL REFS*/propName;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) class1.propName: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "class1",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "propName",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   }
  ]