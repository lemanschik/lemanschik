// === findAllReferences ===
// === /tests/cases/fourslash/findAllReferPropertyAccessExpressionHeritageClause.ts ===
// class B {}
// function foo() {
//     return {/*FIND ALL REFS*/<|[|{| isWriteAccess: true, isDefinition: true |}B|]: B|>};
// }
// class C extends (foo()).[|B|] {}
// class C1 extends foo().[|B|] {}

  // === Definitions ===
  // === /tests/cases/fourslash/findAllReferPropertyAccessExpressionHeritageClause.ts ===
  // class B {}
  // function foo() {
  //     return {/*FIND ALL REFS*/<|[|B|]: B|>};
  // }
  // class C extends (foo()).B {}
  // class C1 extends foo().B {}

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) B: typeof B",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "B",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "typeof",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "B",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/findAllReferPropertyAccessExpressionHeritageClause.ts ===
// class B {}
// function foo() {
//     return {<|[|{| isWriteAccess: true |}B|]: B|>};
// }
// class C extends (foo())./*FIND ALL REFS*/[|B|] {}
// class C1 extends foo().[|B|] {}

  // === Definitions ===
  // === /tests/cases/fourslash/findAllReferPropertyAccessExpressionHeritageClause.ts ===
  // class B {}
  // function foo() {
  //     return {<|[|B|]: B|>};
  // }
  // class C extends (foo())./*FIND ALL REFS*/B {}
  // class C1 extends foo().B {}

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) B: typeof B",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "B",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "typeof",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "B",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/findAllReferPropertyAccessExpressionHeritageClause.ts ===
// class B {}
// function foo() {
//     return {<|[|{| isWriteAccess: true |}B|]: B|>};
// }
// class C extends (foo()).[|B|] {}
// class C1 extends foo()./*FIND ALL REFS*/[|B|] {}

  // === Definitions ===
  // === /tests/cases/fourslash/findAllReferPropertyAccessExpressionHeritageClause.ts ===
  // class B {}
  // function foo() {
  //     return {<|[|B|]: B|>};
  // }
  // class C extends (foo()).B {}
  // class C1 extends foo()./*FIND ALL REFS*/B {}

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) B: typeof B",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "B",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "typeof",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "B",
      "kind": "className"
     }
    ]
   }
  ]