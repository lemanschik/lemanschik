// === findAllReferences ===
// === /tests/cases/fourslash/referencesForClassMembersExtendingGenericClass.ts ===
// class Base<T> {
//     /*FIND ALL REFS*/<|[|{| defId: 0, isDefinition: true |}a|]: this;|>
//     method<U>(a?:T, b?:U): this { }
// }
// class MyClass extends Base<number> {
//     <|[|{| defId: 1 |}a|];|>
//     method() { }
// }
// 
// var c: MyClass;
// c.[|{| defId: 1 |}a|];
// c.method();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForClassMembersExtendingGenericClass.ts ===
  // class Base<T> {
  //     /*FIND ALL REFS*/<|[|{| defId: 0 |}a|]: this;|>
  //     method<U>(a?:T, b?:U): this { }
  // }
  // class MyClass extends Base<number> {
  //     <|[|{| defId: 1 |}a|];|>
  //     method() { }
  // }
  // 
  // --- (line: 10) skipped ---

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) Base<T>.a: this",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Base",
      "kind": "className"
     },
     {
      "text": "<",
      "kind": "punctuation"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": ">",
      "kind": "punctuation"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "a",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "this",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) MyClass.a: any",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "MyClass",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "a",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "any",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForClassMembersExtendingGenericClass.ts ===
// class Base<T> {
//     <|[|{| defId: 0 |}a|]: this;|>
//     method<U>(a?:T, b?:U): this { }
// }
// class MyClass extends Base<number> {
//     /*FIND ALL REFS*/<|[|{| defId: 1, isDefinition: true |}a|];|>
//     method() { }
// }
// 
// var c: MyClass;
// c.[|{| defId: 1 |}a|];
// c.method();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForClassMembersExtendingGenericClass.ts ===
  // class Base<T> {
  //     <|[|{| defId: 0 |}a|]: this;|>
  //     method<U>(a?:T, b?:U): this { }
  // }
  // class MyClass extends Base<number> {
  //     /*FIND ALL REFS*/<|[|{| defId: 1 |}a|];|>
  //     method() { }
  // }
  // 
  // --- (line: 10) skipped ---

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) Base<T>.a: this",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Base",
      "kind": "className"
     },
     {
      "text": "<",
      "kind": "punctuation"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": ">",
      "kind": "punctuation"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "a",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "this",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) MyClass.a: any",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "MyClass",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "a",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "any",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForClassMembersExtendingGenericClass.ts ===
// class Base<T> {
//     <|[|{| defId: 0 |}a|]: this;|>
//     method<U>(a?:T, b?:U): this { }
// }
// class MyClass extends Base<number> {
//     <|[|{| defId: 1 |}a|];|>
//     method() { }
// }
// 
// var c: MyClass;
// c./*FIND ALL REFS*/[|{| defId: 1 |}a|];
// c.method();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForClassMembersExtendingGenericClass.ts ===
  // class Base<T> {
  //     <|[|{| defId: 0 |}a|]: this;|>
  //     method<U>(a?:T, b?:U): this { }
  // }
  // class MyClass extends Base<number> {
  //     <|[|{| defId: 1 |}a|];|>
  //     method() { }
  // }
  // 
  // var c: MyClass;
  // c./*FIND ALL REFS*/a;
  // c.method();

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) Base<T>.a: this",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Base",
      "kind": "className"
     },
     {
      "text": "<",
      "kind": "punctuation"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": ">",
      "kind": "punctuation"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "a",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "this",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) MyClass.a: any",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "MyClass",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "a",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "any",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForClassMembersExtendingGenericClass.ts ===
// class Base<T> {
//     a: this;
//     /*FIND ALL REFS*/<|[|{| defId: 0, isWriteAccess: true, isDefinition: true |}method|]<U>(a?:T, b?:U): this { }|>
// }
// class MyClass extends Base<number> {
//     a;
//     <|[|{| defId: 1, isWriteAccess: true |}method|]() { }|>
// }
// 
// var c: MyClass;
// c.a;
// c.[|{| defId: 1 |}method|]();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForClassMembersExtendingGenericClass.ts ===
  // class Base<T> {
  //     a: this;
  //     /*FIND ALL REFS*/<|[|{| defId: 0 |}method|]<U>(a?:T, b?:U): this { }|>
  // }
  // class MyClass extends Base<number> {
  //     a;
  //     <|[|{| defId: 1 |}method|]() { }|>
  // }
  // 
  // var c: MyClass;
  // c.a;
  // c.method();

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) Base<T>.method<U>(a?: T, b?: U): this",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Base",
      "kind": "className"
     },
     {
      "text": "<",
      "kind": "punctuation"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": ">",
      "kind": "punctuation"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "methodName"
     },
     {
      "text": "<",
      "kind": "punctuation"
     },
     {
      "text": "U",
      "kind": "typeParameterName"
     },
     {
      "text": ">",
      "kind": "punctuation"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "a",
      "kind": "parameterName"
     },
     {
      "text": "?",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": ",",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "b",
      "kind": "parameterName"
     },
     {
      "text": "?",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "U",
      "kind": "typeParameterName"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "this",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) MyClass.method(): void",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "MyClass",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "methodName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForClassMembersExtendingGenericClass.ts ===
// class Base<T> {
//     a: this;
//     <|[|{| defId: 0, isWriteAccess: true |}method|]<U>(a?:T, b?:U): this { }|>
// }
// class MyClass extends Base<number> {
//     a;
//     /*FIND ALL REFS*/<|[|{| defId: 1, isWriteAccess: true, isDefinition: true |}method|]() { }|>
// }
// 
// var c: MyClass;
// c.a;
// c.[|{| defId: 1 |}method|]();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForClassMembersExtendingGenericClass.ts ===
  // class Base<T> {
  //     a: this;
  //     <|[|{| defId: 0 |}method|]<U>(a?:T, b?:U): this { }|>
  // }
  // class MyClass extends Base<number> {
  //     a;
  //     /*FIND ALL REFS*/<|[|{| defId: 1 |}method|]() { }|>
  // }
  // 
  // var c: MyClass;
  // c.a;
  // c.method();

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) Base<T>.method<U>(a?: T, b?: U): this",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Base",
      "kind": "className"
     },
     {
      "text": "<",
      "kind": "punctuation"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": ">",
      "kind": "punctuation"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "methodName"
     },
     {
      "text": "<",
      "kind": "punctuation"
     },
     {
      "text": "U",
      "kind": "typeParameterName"
     },
     {
      "text": ">",
      "kind": "punctuation"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "a",
      "kind": "parameterName"
     },
     {
      "text": "?",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": ",",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "b",
      "kind": "parameterName"
     },
     {
      "text": "?",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "U",
      "kind": "typeParameterName"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "this",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) MyClass.method(): void",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "MyClass",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "methodName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForClassMembersExtendingGenericClass.ts ===
// class Base<T> {
//     a: this;
//     <|[|{| defId: 0, isWriteAccess: true |}method|]<U>(a?:T, b?:U): this { }|>
// }
// class MyClass extends Base<number> {
//     a;
//     <|[|{| defId: 1, isWriteAccess: true |}method|]() { }|>
// }
// 
// var c: MyClass;
// c.a;
// c./*FIND ALL REFS*/[|{| defId: 1 |}method|]();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForClassMembersExtendingGenericClass.ts ===
  // class Base<T> {
  //     a: this;
  //     <|[|{| defId: 0 |}method|]<U>(a?:T, b?:U): this { }|>
  // }
  // class MyClass extends Base<number> {
  //     a;
  //     <|[|{| defId: 1 |}method|]() { }|>
  // }
  // 
  // var c: MyClass;
  // c.a;
  // c./*FIND ALL REFS*/method();

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) Base<T>.method<U>(a?: T, b?: U): this",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Base",
      "kind": "className"
     },
     {
      "text": "<",
      "kind": "punctuation"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": ">",
      "kind": "punctuation"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "methodName"
     },
     {
      "text": "<",
      "kind": "punctuation"
     },
     {
      "text": "U",
      "kind": "typeParameterName"
     },
     {
      "text": ">",
      "kind": "punctuation"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "a",
      "kind": "parameterName"
     },
     {
      "text": "?",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": ",",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "b",
      "kind": "parameterName"
     },
     {
      "text": "?",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "U",
      "kind": "typeParameterName"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "this",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) MyClass.method(): void",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "MyClass",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "methodName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]