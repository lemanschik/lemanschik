// === findAllReferences ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 11) skipped ---
//     onClick(event?: React.MouseEvent<HTMLButtonElement>): void;
// }
// interface LinkProps extends ClickableProps {
//     /*FIND ALL REFS*/<|[|{| isDefinition: true |}goTo|]: string;|>
// }
// declare function MainButton(buttonProps: ButtonProps): JSX.Element;
// declare function MainButton(linkProps: LinkProps): JSX.Element;
// declare function MainButton(props: ButtonProps | LinkProps): JSX.Element;
// let opt = <MainButton />;
// let opt = <MainButton children="chidlren" />;
// let opt = <MainButton onClick={()=>{}} />;
// let opt = <MainButton onClick={()=>{}} ignore-prop />;
// let opt = <MainButton <|[|{| isWriteAccess: true |}goTo|]="goTo"|> />;
// let opt = <MainButton [|{| isWriteAccess: true |}goTo|] />;
// let opt = <MainButton wrong />;

  // === Definitions ===
  // === /tests/cases/fourslash/file.tsx ===
  // --- (line: 11) skipped ---
  //     onClick(event?: React.MouseEvent<HTMLButtonElement>): void;
  // }
  // interface LinkProps extends ClickableProps {
  //     /*FIND ALL REFS*/<|[|goTo|]: string;|>
  // }
  // declare function MainButton(buttonProps: ButtonProps): JSX.Element;
  // declare function MainButton(linkProps: LinkProps): JSX.Element;
  // --- (line: 19) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) LinkProps.goTo: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "LinkProps",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "goTo",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   }
  ]