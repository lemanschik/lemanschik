//// [tests/cases/compiler/noImplicitReturnsExclusions.ts] ////

=== noImplicitReturnsExclusions.ts ===
// Functions with a return type of any, undefined, or a type that includes void are excluded
// from --noImplicitReturns checks.

function f1(b: boolean): undefined {
>f1 : Symbol(f1, Decl(noImplicitReturnsExclusions.ts, 0, 0))
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 3, 12))

    if (b) return undefined;
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 3, 12))
>undefined : Symbol(undefined)
}

function f2(b: boolean): void {
>f2 : Symbol(f2, Decl(noImplicitReturnsExclusions.ts, 5, 1))
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 7, 12))

    if (b) return undefined;
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 7, 12))
>undefined : Symbol(undefined)
}

function f3(b: boolean): any {
>f3 : Symbol(f3, Decl(noImplicitReturnsExclusions.ts, 9, 1))
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 11, 12))

    if (b) return undefined;
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 11, 12))
>undefined : Symbol(undefined)
}

function f4(b: boolean): string | undefined {  // Error
>f4 : Symbol(f4, Decl(noImplicitReturnsExclusions.ts, 13, 1))
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 15, 12))

    if (b) return undefined;
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 15, 12))
>undefined : Symbol(undefined)
}

function f5(b: boolean): string | void {
>f5 : Symbol(f5, Decl(noImplicitReturnsExclusions.ts, 17, 1))
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 19, 12))

    if (b) return undefined;
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 19, 12))
>undefined : Symbol(undefined)
}

function f6(b: boolean): unknown {  // Error
>f6 : Symbol(f6, Decl(noImplicitReturnsExclusions.ts, 21, 1))
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 23, 12))

    if (b) return undefined;
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 23, 12))
>undefined : Symbol(undefined)
}

function f10(b: boolean) {
>f10 : Symbol(f10, Decl(noImplicitReturnsExclusions.ts, 25, 1))
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 27, 13))

    if (b) return;
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 27, 13))
}

function f11(b: boolean) {
>f11 : Symbol(f11, Decl(noImplicitReturnsExclusions.ts, 29, 1))
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 31, 13))

    if (b) return undefined;
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 31, 13))
>undefined : Symbol(undefined)
}

function f12(b: boolean) {
>f12 : Symbol(f12, Decl(noImplicitReturnsExclusions.ts, 33, 1))
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 35, 13))

    if (b) return undefined as any;
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 35, 13))
>undefined : Symbol(undefined)
}

function f13(b: boolean) {  // Error
>f13 : Symbol(f13, Decl(noImplicitReturnsExclusions.ts, 37, 1))
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 39, 13))

    if (b) return undefined as unknown;
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 39, 13))
>undefined : Symbol(undefined)
}

function f14(b: boolean) {  // Error
>f14 : Symbol(f14, Decl(noImplicitReturnsExclusions.ts, 41, 1))
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 43, 13))

    if (b) return 42;
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 43, 13))
}

function f15(b: boolean) {  // Error
>f15 : Symbol(f15, Decl(noImplicitReturnsExclusions.ts, 45, 1))
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 47, 13))

    if (b) return 42;
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 47, 13))

    if (b) return undefined;
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 47, 13))
>undefined : Symbol(undefined)
}

function f16(b: boolean) {  // Error
>f16 : Symbol(f16, Decl(noImplicitReturnsExclusions.ts, 50, 1))
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 52, 13))

    if (b) return 42;
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 52, 13))

    if (b) return;
>b : Symbol(b, Decl(noImplicitReturnsExclusions.ts, 52, 13))
}

