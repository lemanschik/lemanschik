// === findAllReferences ===
// === /foo/types/types.ts ===
// <|export type /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}Full|] = { prop: string; };|>

// === /app.ts ===
// import { foo } from './foo/types';
// export type fullType = foo.[|Full|];
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.[|Full|];

  // === Definitions ===
  // === /foo/types/types.ts ===
  // <|export type /*FIND ALL REFS*/[|Full|] = { prop: string; };|>

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "type",
    "name": "type Full = {\n    prop: string;\n}",
    "displayParts": [
     {
      "text": "type",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Full",
      "kind": "aliasName"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=",
      "kind": "operator"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "{",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "    ",
      "kind": "space"
     },
     {
      "text": "prop",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     },
     {
      "text": ";",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "}",
      "kind": "punctuation"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /foo/types/types.ts ===
// <|export type [|{| isWriteAccess: true |}Full|] = { prop: string; };|>

// === /app.ts ===
// import { foo } from './foo/types';
// export type fullType = foo./*FIND ALL REFS*/[|Full|];
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.[|Full|];

  // === Definitions ===
  // === /foo/types/types.ts ===
  // <|export type [|Full|] = { prop: string; };|>

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "type",
    "name": "type Full = {\n    prop: string;\n}",
    "displayParts": [
     {
      "text": "type",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Full",
      "kind": "aliasName"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=",
      "kind": "operator"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "{",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "    ",
      "kind": "space"
     },
     {
      "text": "prop",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     },
     {
      "text": ";",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "}",
      "kind": "punctuation"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /foo/types/types.ts ===
// <|export type [|{| isWriteAccess: true |}Full|] = { prop: string; };|>

// === /app.ts ===
// import { foo } from './foo/types';
// export type fullType = foo.[|Full|];
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo./*FIND ALL REFS*/[|Full|];

  // === Definitions ===
  // === /foo/types/types.ts ===
  // <|export type [|Full|] = { prop: string; };|>

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "type",
    "name": "type Full = {\n    prop: string;\n}",
    "displayParts": [
     {
      "text": "type",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Full",
      "kind": "aliasName"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=",
      "kind": "operator"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "{",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "    ",
      "kind": "space"
     },
     {
      "text": "prop",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     },
     {
      "text": ";",
      "kind": "punctuation"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "}",
      "kind": "punctuation"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /foo/types/index.ts ===
// <|import * as /*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true, isDefinition: true |}foo|] from './types';|>
// <|export { [|{| defId: 0, isWriteAccess: true |}foo|] };|>

// === /app.ts ===
// <|import { [|{| defId: 2, isWriteAccess: true |}foo|] } from './foo/types';|>
// export type fullType = [|{| defId: 2 |}foo|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|{| defId: 1 |}foo|].Full;

  // === Definitions ===
  // === /foo/types/index.ts ===
  // <|import * as /*FIND ALL REFS*/[|{| defId: 0 |}foo|] from './types';|>
  // <|export { [|{| defId: 1 |}foo|] };|>

  // === /app.ts ===
  // <|import { [|{| defId: 2 |}foo|] } from './foo/types';|>
  // export type fullType = foo.Full;
  // type namespaceImport = typeof import('./foo/types');
  // type fullType2 = import('./foo/types').foo.Full;

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "import foo",
    "displayParts": [
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "export foo",
    "displayParts": [
     {
      "text": "export",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 2,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "import foo",
    "displayParts": [
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "aliasName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /foo/types/index.ts ===
// <|import * as [|{| defId: 0, isWriteAccess: true |}foo|] from './types';|>
// <|export { /*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true, isDefinition: true |}foo|] };|>

// === /app.ts ===
// <|import { [|{| defId: 2, isWriteAccess: true |}foo|] } from './foo/types';|>
// export type fullType = [|{| defId: 2 |}foo|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|{| defId: 1 |}foo|].Full;

  // === Definitions ===
  // === /foo/types/index.ts ===
  // <|import * as [|{| defId: 0 |}foo|] from './types';|>
  // <|export { /*FIND ALL REFS*/[|{| defId: 1 |}foo|] };|>

  // === /app.ts ===
  // <|import { [|{| defId: 2 |}foo|] } from './foo/types';|>
  // export type fullType = foo.Full;
  // type namespaceImport = typeof import('./foo/types');
  // type fullType2 = import('./foo/types').foo.Full;

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "import foo",
    "displayParts": [
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "export foo",
    "displayParts": [
     {
      "text": "export",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 2,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "import foo",
    "displayParts": [
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "aliasName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /app.ts ===
// <|import { /*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true, isDefinition: true |}foo|] } from './foo/types';|>
// export type fullType = [|{| defId: 0 |}foo|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|{| defId: 2 |}foo|].Full;

// === /foo/types/index.ts ===
// <|import * as [|{| defId: 1, isWriteAccess: true |}foo|] from './types';|>
// <|export { [|{| defId: 1, isWriteAccess: true |}foo|] };|>

  // === Definitions ===
  // === /app.ts ===
  // <|import { /*FIND ALL REFS*/[|{| defId: 0 |}foo|] } from './foo/types';|>
  // export type fullType = foo.Full;
  // type namespaceImport = typeof import('./foo/types');
  // type fullType2 = import('./foo/types').foo.Full;

  // === /foo/types/index.ts ===
  // <|import * as [|{| defId: 1 |}foo|] from './types';|>
  // <|export { [|{| defId: 2 |}foo|] };|>

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "import foo",
    "displayParts": [
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "import foo",
    "displayParts": [
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 2,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "export foo",
    "displayParts": [
     {
      "text": "export",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "aliasName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /app.ts ===
// <|import { [|{| defId: 0, isWriteAccess: true |}foo|] } from './foo/types';|>
// export type fullType = /*FIND ALL REFS*/[|{| defId: 0 |}foo|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|{| defId: 2 |}foo|].Full;

// === /foo/types/index.ts ===
// <|import * as [|{| defId: 1, isWriteAccess: true |}foo|] from './types';|>
// <|export { [|{| defId: 1, isWriteAccess: true |}foo|] };|>

  // === Definitions ===
  // === /app.ts ===
  // <|import { [|{| defId: 0 |}foo|] } from './foo/types';|>
  // export type fullType = /*FIND ALL REFS*/foo.Full;
  // type namespaceImport = typeof import('./foo/types');
  // type fullType2 = import('./foo/types').foo.Full;

  // === /foo/types/index.ts ===
  // <|import * as [|{| defId: 1 |}foo|] from './types';|>
  // <|export { [|{| defId: 2 |}foo|] };|>

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "import foo",
    "displayParts": [
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "import foo",
    "displayParts": [
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 2,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "export foo",
    "displayParts": [
     {
      "text": "export",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "aliasName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /foo/types/index.ts ===
// <|import * as [|{| defId: 0, isWriteAccess: true |}foo|] from './types';|>
// <|export { [|{| defId: 0, isWriteAccess: true |}foo|] };|>

// === /app.ts ===
// <|import { [|{| defId: 2, isWriteAccess: true |}foo|] } from './foo/types';|>
// export type fullType = [|{| defId: 2 |}foo|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types')./*FIND ALL REFS*/[|{| defId: 1 |}foo|].Full;

  // === Definitions ===
  // === /foo/types/index.ts ===
  // <|import * as [|{| defId: 0 |}foo|] from './types';|>
  // <|export { [|{| defId: 1 |}foo|] };|>

  // === /app.ts ===
  // <|import { [|{| defId: 2 |}foo|] } from './foo/types';|>
  // export type fullType = foo.Full;
  // type namespaceImport = typeof import('./foo/types');
  // type fullType2 = import('./foo/types')./*FIND ALL REFS*/foo.Full;

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "import foo",
    "displayParts": [
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "export foo",
    "displayParts": [
     {
      "text": "export",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 2,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "import foo",
    "displayParts": [
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "aliasName"
     }
    ]
   }
  ]



// === findRenameLocations ===
// === /foo/types/types.ts ===
// <|export type /*RENAME*/[|FullRENAME|] = { prop: string; };|>

// === /app.ts ===
// import { foo } from './foo/types';
// export type fullType = foo.[|FullRENAME|];
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.[|FullRENAME|];



// === findRenameLocations ===
// === /foo/types/types.ts ===
// <|export type [|FullRENAME|] = { prop: string; };|>

// === /app.ts ===
// import { foo } from './foo/types';
// export type fullType = foo./*RENAME*/[|FullRENAME|];
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.[|FullRENAME|];



// === findRenameLocations ===
// === /foo/types/types.ts ===
// <|export type [|FullRENAME|] = { prop: string; };|>

// === /app.ts ===
// import { foo } from './foo/types';
// export type fullType = foo.[|FullRENAME|];
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo./*RENAME*/[|FullRENAME|];



// === findRenameLocations ===
// === /foo/types/index.ts ===
// <|import * as /*RENAME*/[|fooRENAME|] from './types';|>
// <|export { [|fooRENAME|] as foo/*END SUFFIX*/ };|>



// === findRenameLocations ===
// === /foo/types/index.ts ===
// import * as foo from './types';
// <|export { /*START PREFIX*/foo as /*RENAME*/[|fooRENAME|] };|>

// === /app.ts ===
// <|import { [|fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|fooRENAME|].Full;



// === findRenameLocations ===
// === /foo/types/index.ts ===
// import * as foo from './types';
// <|export { /*START PREFIX*/foo as [|fooRENAME|] };|>

// === /app.ts ===
// <|import { [|fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types')./*RENAME*/[|fooRENAME|].Full;



// === findRenameLocations ===
// === /app.ts ===
// <|import { /*START PREFIX*/foo as /*RENAME*/[|fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.Full;



// === findRenameLocations ===
// === /app.ts ===
// <|import { /*START PREFIX*/foo as [|fooRENAME|] } from './foo/types';|>
// export type fullType = /*RENAME*/[|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').foo.Full;



// === findRenameLocations ===
// @providePrefixAndSuffixTextForRename: false

// === /app.ts ===
// <|import { /*RENAME*/[|fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|fooRENAME|].Full;

// === /foo/types/index.ts ===
// <|import * as [|fooRENAME|] from './types';|>
// <|export { [|fooRENAME|] };|>



// === findRenameLocations ===
// @providePrefixAndSuffixTextForRename: false

// === /app.ts ===
// <|import { [|fooRENAME|] } from './foo/types';|>
// export type fullType = /*RENAME*/[|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|fooRENAME|].Full;

// === /foo/types/index.ts ===
// <|import * as [|fooRENAME|] from './types';|>
// <|export { [|fooRENAME|] };|>



// === findRenameLocations ===
// @providePrefixAndSuffixTextForRename: false

// === /foo/types/index.ts ===
// <|import * as [|fooRENAME|] from './types';|>
// <|export { [|fooRENAME|] };|>

// === /app.ts ===
// <|import { [|fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types')./*RENAME*/[|fooRENAME|].Full;



// === findRenameLocations ===
// @providePrefixAndSuffixTextForRename: false

// === /foo/types/index.ts ===
// <|import * as /*RENAME*/[|fooRENAME|] from './types';|>
// <|export { [|fooRENAME|] };|>

// === /app.ts ===
// <|import { [|fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|fooRENAME|].Full;



// === findRenameLocations ===
// @providePrefixAndSuffixTextForRename: false

// === /foo/types/index.ts ===
// <|import * as [|fooRENAME|] from './types';|>
// <|export { /*RENAME*/[|fooRENAME|] };|>

// === /app.ts ===
// <|import { [|fooRENAME|] } from './foo/types';|>
// export type fullType = [|fooRENAME|].Full;
// type namespaceImport = typeof import('./foo/types');
// type fullType2 = import('./foo/types').[|fooRENAME|].Full;