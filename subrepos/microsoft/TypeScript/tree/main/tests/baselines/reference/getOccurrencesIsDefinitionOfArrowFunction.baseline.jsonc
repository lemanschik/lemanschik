// === findAllReferences ===
// === /tests/cases/fourslash/getOccurrencesIsDefinitionOfArrowFunction.ts ===
// /*FIND ALL REFS*/<|var [|{| isWriteAccess: true, isDefinition: true |}f|] = x => x + 1;|>
// [|f|](12);

  // === Definitions ===
  // === /tests/cases/fourslash/getOccurrencesIsDefinitionOfArrowFunction.ts ===
  // /*FIND ALL REFS*/<|var [|f|] = x => x + 1;|>
  // f(12);

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "var",
    "name": "var f: (x: any) => any",
    "displayParts": [
     {
      "text": "var",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "f",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "x",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "any",
      "kind": "keyword"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=>",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "any",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/getOccurrencesIsDefinitionOfArrowFunction.ts ===
// <|var /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}f|] = x => x + 1;|>
// [|f|](12);

  // === Definitions ===
  // === /tests/cases/fourslash/getOccurrencesIsDefinitionOfArrowFunction.ts ===
  // <|var /*FIND ALL REFS*/[|f|] = x => x + 1;|>
  // f(12);

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "var",
    "name": "var f: (x: any) => any",
    "displayParts": [
     {
      "text": "var",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "f",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "x",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "any",
      "kind": "keyword"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=>",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "any",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/getOccurrencesIsDefinitionOfArrowFunction.ts ===
// <|var [|{| isWriteAccess: true |}f|] = x => x + 1;|>
// /*FIND ALL REFS*/[|f|](12);

  // === Definitions ===
  // === /tests/cases/fourslash/getOccurrencesIsDefinitionOfArrowFunction.ts ===
  // <|var [|f|] = x => x + 1;|>
  // /*FIND ALL REFS*/f(12);

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "var",
    "name": "var f: (x: any) => any",
    "displayParts": [
     {
      "text": "var",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "f",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "x",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "any",
      "kind": "keyword"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=>",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "any",
      "kind": "keyword"
     }
    ]
   }
  ]