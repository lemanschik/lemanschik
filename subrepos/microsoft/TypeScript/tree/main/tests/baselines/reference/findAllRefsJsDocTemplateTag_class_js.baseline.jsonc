// === findAllReferences ===
// === /a.js ===
// /** @template /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}T|] */
// class C {
//     constructor() {
//         /** @type {[|T|]} */
//         this.x = null;
//     }
// }

  // === Definitions ===
  // === /a.js ===
  // /** @template /*FIND ALL REFS*/[|T|] */
  // class C {
  //     constructor() {
  //         /** @type {T} */
  // --- (line: 5) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "type parameter",
    "name": "(type parameter) T in C<T>",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "type parameter",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "in",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     },
     {
      "text": "<",
      "kind": "punctuation"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": ">",
      "kind": "punctuation"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /a.js ===
// /** @template [|{| isWriteAccess: true |}T|] */
// class C {
//     constructor() {
//         /** @type {/*FIND ALL REFS*/[|T|]} */
//         this.x = null;
//     }
// }

  // === Definitions ===
  // === /a.js ===
  // /** @template [|T|] */
  // class C {
  //     constructor() {
  //         /** @type {/*FIND ALL REFS*/T} */
  //         this.x = null;
  //     }
  // }

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "type parameter",
    "name": "(type parameter) T in C<T>",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "type parameter",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "in",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     },
     {
      "text": "<",
      "kind": "punctuation"
     },
     {
      "text": "T",
      "kind": "typeParameterName"
     },
     {
      "text": ">",
      "kind": "punctuation"
     }
    ]
   }
  ]