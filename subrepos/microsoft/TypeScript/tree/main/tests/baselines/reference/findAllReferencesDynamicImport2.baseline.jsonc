// === findAllReferences ===
// === /tests/cases/fourslash/foo.ts ===
// <|export function /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}bar|]() { return "bar"; }|>
// var x = import("./foo");
// x.then(foo => {
//     foo.[|bar|]();
// })

  // === Definitions ===
  // === /tests/cases/fourslash/foo.ts ===
  // <|export function /*FIND ALL REFS*/[|bar|]() { return "bar"; }|>
  // var x = import("./foo");
  // x.then(foo => {
  //     foo.bar();
  // })

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "function bar(): string",
    "displayParts": [
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "bar",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/foo.ts ===
// <|export function [|{| isWriteAccess: true |}bar|]() { return "bar"; }|>
// var x = import("./foo");
// x.then(foo => {
//     foo./*FIND ALL REFS*/[|bar|]();
// })

  // === Definitions ===
  // === /tests/cases/fourslash/foo.ts ===
  // <|export function [|bar|]() { return "bar"; }|>
  // var x = import("./foo");
  // x.then(foo => {
  //     foo./*FIND ALL REFS*/bar();
  // })

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "function bar(): string",
    "displayParts": [
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "bar",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findRenameLocations ===
// === /tests/cases/fourslash/foo.ts ===
// <|export function /*RENAME*/[|barRENAME|]() { return "bar"; }|>
// var x = import("./foo");
// x.then(foo => {
//     foo.[|barRENAME|]();
// })



// === findRenameLocations ===
// === /tests/cases/fourslash/foo.ts ===
// <|export function [|barRENAME|]() { return "bar"; }|>
// var x = import("./foo");
// x.then(foo => {
//     foo./*RENAME*/[|barRENAME|]();
// })