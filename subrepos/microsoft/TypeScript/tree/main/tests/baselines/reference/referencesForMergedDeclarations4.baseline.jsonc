// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
// /*FIND ALL REFS*/<|class [|{| isWriteAccess: true, isDefinition: true |}testClass|] {
//     static staticMethod() { }
//     method() { }
// }|>
// 
// <|module [|{| isWriteAccess: true, isDefinition: true |}testClass|] {
//     export interface Bar {
// 
//     }
//     export var s = 0;
// }|>
// 
// var c1: [|testClass|];
// var c2: [|testClass|].Bar;
// [|testClass|].staticMethod();
// [|testClass|].prototype.method();
// [|testClass|].bind(this);
// [|testClass|].s;
// new [|testClass|]();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
  // /*FIND ALL REFS*/<|class [|testClass|] {
  //     static staticMethod() { }
  //     method() { }
  // }|>
  // 
  // module testClass {
  //     export interface Bar {
  // --- (line: 8) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class testClass\nnamespace testClass",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
// <|class /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}testClass|] {
//     static staticMethod() { }
//     method() { }
// }|>
// 
// <|module [|{| isWriteAccess: true, isDefinition: true |}testClass|] {
//     export interface Bar {
// 
//     }
//     export var s = 0;
// }|>
// 
// var c1: [|testClass|];
// var c2: [|testClass|].Bar;
// [|testClass|].staticMethod();
// [|testClass|].prototype.method();
// [|testClass|].bind(this);
// [|testClass|].s;
// new [|testClass|]();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
  // <|class /*FIND ALL REFS*/[|testClass|] {
  //     static staticMethod() { }
  //     method() { }
  // }|>
  // 
  // module testClass {
  //     export interface Bar {
  // --- (line: 8) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class testClass\nnamespace testClass",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
// <|class [|{| isWriteAccess: true, isDefinition: true |}testClass|] {
//     static staticMethod() { }
//     method() { }
// }|>
// 
// /*FIND ALL REFS*/<|module [|{| isWriteAccess: true, isDefinition: true |}testClass|] {
//     export interface Bar {
// 
//     }
//     export var s = 0;
// }|>
// 
// var c1: [|testClass|];
// var c2: [|testClass|].Bar;
// [|testClass|].staticMethod();
// [|testClass|].prototype.method();
// [|testClass|].bind(this);
// [|testClass|].s;
// new [|testClass|]();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
  // <|class [|testClass|] {
  //     static staticMethod() { }
  //     method() { }
  // }|>
  // 
  // /*FIND ALL REFS*/module testClass {
  //     export interface Bar {
  // 
  //     }
  // --- (line: 10) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class testClass\nnamespace testClass",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
// <|class [|{| isWriteAccess: true, isDefinition: true |}testClass|] {
//     static staticMethod() { }
//     method() { }
// }|>
// 
// <|module /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}testClass|] {
//     export interface Bar {
// 
//     }
//     export var s = 0;
// }|>
// 
// var c1: [|testClass|];
// var c2: [|testClass|].Bar;
// [|testClass|].staticMethod();
// [|testClass|].prototype.method();
// [|testClass|].bind(this);
// [|testClass|].s;
// new [|testClass|]();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
  // <|class [|testClass|] {
  //     static staticMethod() { }
  //     method() { }
  // }|>
  // 
  // module /*FIND ALL REFS*/testClass {
  //     export interface Bar {
  // 
  //     }
  // --- (line: 10) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class testClass\nnamespace testClass",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
// <|class [|{| isWriteAccess: true |}testClass|] {
//     static staticMethod() { }
//     method() { }
// }|>
// 
// <|module [|{| isWriteAccess: true |}testClass|] {
//     export interface Bar {
// 
//     }
//     export var s = 0;
// }|>
// 
// var c1: /*FIND ALL REFS*/[|testClass|];
// var c2: [|testClass|].Bar;
// [|testClass|].staticMethod();
// [|testClass|].prototype.method();
// [|testClass|].bind(this);
// [|testClass|].s;
// new [|testClass|]();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
  // <|class [|testClass|] {
  //     static staticMethod() { }
  //     method() { }
  // }|>
  // 
  // module testClass {
  //     export interface Bar {
  // 
  //     }
  //     export var s = 0;
  // }
  // 
  // var c1: /*FIND ALL REFS*/testClass;
  // var c2: testClass.Bar;
  // testClass.staticMethod();
  // testClass.prototype.method();
  // --- (line: 17) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class testClass\nnamespace testClass",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
// <|class [|{| isWriteAccess: true |}testClass|] {
//     static staticMethod() { }
//     method() { }
// }|>
// 
// <|module [|{| isWriteAccess: true |}testClass|] {
//     export interface Bar {
// 
//     }
//     export var s = 0;
// }|>
// 
// var c1: [|testClass|];
// var c2: /*FIND ALL REFS*/[|testClass|].Bar;
// [|testClass|].staticMethod();
// [|testClass|].prototype.method();
// [|testClass|].bind(this);
// [|testClass|].s;
// new [|testClass|]();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
  // <|class [|testClass|] {
  //     static staticMethod() { }
  //     method() { }
  // }|>
  // 
  // module testClass {
  //     export interface Bar {
  // 
  //     }
  //     export var s = 0;
  // }
  // 
  // var c1: testClass;
  // var c2: /*FIND ALL REFS*/testClass.Bar;
  // testClass.staticMethod();
  // testClass.prototype.method();
  // testClass.bind(this);
  // testClass.s;
  // new testClass();

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class testClass\nnamespace testClass",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
// <|class [|{| isWriteAccess: true |}testClass|] {
//     static staticMethod() { }
//     method() { }
// }|>
// 
// <|module [|{| isWriteAccess: true |}testClass|] {
//     export interface Bar {
// 
//     }
//     export var s = 0;
// }|>
// 
// var c1: [|testClass|];
// var c2: [|testClass|].Bar;
// /*FIND ALL REFS*/[|testClass|].staticMethod();
// [|testClass|].prototype.method();
// [|testClass|].bind(this);
// [|testClass|].s;
// new [|testClass|]();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
  // <|class [|testClass|] {
  //     static staticMethod() { }
  //     method() { }
  // }|>
  // 
  // module testClass {
  //     export interface Bar {
  // --- (line: 8) skipped ---

  // --- (line: 11) skipped ---
  // 
  // var c1: testClass;
  // var c2: testClass.Bar;
  // /*FIND ALL REFS*/testClass.staticMethod();
  // testClass.prototype.method();
  // testClass.bind(this);
  // testClass.s;
  // new testClass();

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class testClass\nnamespace testClass",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
// <|class [|{| isWriteAccess: true |}testClass|] {
//     static staticMethod() { }
//     method() { }
// }|>
// 
// <|module [|{| isWriteAccess: true |}testClass|] {
//     export interface Bar {
// 
//     }
//     export var s = 0;
// }|>
// 
// var c1: [|testClass|];
// var c2: [|testClass|].Bar;
// [|testClass|].staticMethod();
// /*FIND ALL REFS*/[|testClass|].prototype.method();
// [|testClass|].bind(this);
// [|testClass|].s;
// new [|testClass|]();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
  // <|class [|testClass|] {
  //     static staticMethod() { }
  //     method() { }
  // }|>
  // 
  // module testClass {
  //     export interface Bar {
  // --- (line: 8) skipped ---

  // --- (line: 12) skipped ---
  // var c1: testClass;
  // var c2: testClass.Bar;
  // testClass.staticMethod();
  // /*FIND ALL REFS*/testClass.prototype.method();
  // testClass.bind(this);
  // testClass.s;
  // new testClass();

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class testClass\nnamespace testClass",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
// <|class [|{| isWriteAccess: true |}testClass|] {
//     static staticMethod() { }
//     method() { }
// }|>
// 
// <|module [|{| isWriteAccess: true |}testClass|] {
//     export interface Bar {
// 
//     }
//     export var s = 0;
// }|>
// 
// var c1: [|testClass|];
// var c2: [|testClass|].Bar;
// [|testClass|].staticMethod();
// [|testClass|].prototype.method();
// /*FIND ALL REFS*/[|testClass|].bind(this);
// [|testClass|].s;
// new [|testClass|]();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
  // <|class [|testClass|] {
  //     static staticMethod() { }
  //     method() { }
  // }|>
  // 
  // module testClass {
  //     export interface Bar {
  // --- (line: 8) skipped ---

  // --- (line: 13) skipped ---
  // var c2: testClass.Bar;
  // testClass.staticMethod();
  // testClass.prototype.method();
  // /*FIND ALL REFS*/testClass.bind(this);
  // testClass.s;
  // new testClass();

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class testClass\nnamespace testClass",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
// <|class [|{| isWriteAccess: true |}testClass|] {
//     static staticMethod() { }
//     method() { }
// }|>
// 
// <|module [|{| isWriteAccess: true |}testClass|] {
//     export interface Bar {
// 
//     }
//     export var s = 0;
// }|>
// 
// var c1: [|testClass|];
// var c2: [|testClass|].Bar;
// [|testClass|].staticMethod();
// [|testClass|].prototype.method();
// [|testClass|].bind(this);
// /*FIND ALL REFS*/[|testClass|].s;
// new [|testClass|]();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
  // <|class [|testClass|] {
  //     static staticMethod() { }
  //     method() { }
  // }|>
  // 
  // module testClass {
  //     export interface Bar {
  // --- (line: 8) skipped ---

  // --- (line: 14) skipped ---
  // testClass.staticMethod();
  // testClass.prototype.method();
  // testClass.bind(this);
  // /*FIND ALL REFS*/testClass.s;
  // new testClass();

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class testClass\nnamespace testClass",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
// <|class [|{| isWriteAccess: true |}testClass|] {
//     static staticMethod() { }
//     method() { }
// }|>
// 
// <|module [|{| isWriteAccess: true |}testClass|] {
//     export interface Bar {
// 
//     }
//     export var s = 0;
// }|>
// 
// var c1: [|testClass|];
// var c2: [|testClass|].Bar;
// [|testClass|].staticMethod();
// [|testClass|].prototype.method();
// [|testClass|].bind(this);
// [|testClass|].s;
// new /*FIND ALL REFS*/[|testClass|]();

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForMergedDeclarations4.ts ===
  // <|class [|testClass|] {
  //     static staticMethod() { }
  //     method() { }
  // }|>
  // 
  // module testClass {
  //     export interface Bar {
  // --- (line: 8) skipped ---

  // --- (line: 15) skipped ---
  // testClass.prototype.method();
  // testClass.bind(this);
  // testClass.s;
  // new /*FIND ALL REFS*/testClass();

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class testClass\nnamespace testClass",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "testClass",
      "kind": "className"
     }
    ]
   }
  ]