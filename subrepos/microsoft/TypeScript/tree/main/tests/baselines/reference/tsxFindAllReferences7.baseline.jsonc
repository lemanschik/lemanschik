// === findAllReferences ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 4) skipped ---
//     interface ElementAttributesProperty { props; }
// }
// interface OptionPropBag {
//     /*FIND ALL REFS*/<|[|{| isDefinition: true |}propx|]: number|>
//     propString: string
//     optional?: boolean
// }
// declare function Opt(attributes: OptionPropBag): JSX.Element;
// let opt = <Opt />;
// let opt1 = <Opt <|[|{| isWriteAccess: true |}propx|]={100}|> propString />;
// let opt2 = <Opt <|[|{| isWriteAccess: true |}propx|]={100}|> optional/>;
// let opt3 = <Opt wrong />;

  // === Definitions ===
  // === /tests/cases/fourslash/file.tsx ===
  // --- (line: 4) skipped ---
  //     interface ElementAttributesProperty { props; }
  // }
  // interface OptionPropBag {
  //     /*FIND ALL REFS*/<|[|propx|]: number|>
  //     propString: string
  //     optional?: boolean
  // }
  // --- (line: 12) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) OptionPropBag.propx: number",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "OptionPropBag",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "propx",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   }
  ]