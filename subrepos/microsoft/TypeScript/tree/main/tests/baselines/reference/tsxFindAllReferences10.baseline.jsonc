// === findAllReferences ===
// === /tests/cases/fourslash/file.tsx ===
// --- (line: 8) skipped ---
//     className?: string;
// }
// interface ButtonProps extends ClickableProps {
//     /*FIND ALL REFS*/<|[|{| isDefinition: true |}onClick|](event?: React.MouseEvent<HTMLButtonElement>): void;|>
// }
// interface LinkProps extends ClickableProps {
//     goTo: string;
// }
// declare function MainButton(buttonProps: ButtonProps): JSX.Element;
// declare function MainButton(linkProps: LinkProps): JSX.Element;
// declare function MainButton(props: ButtonProps | LinkProps): JSX.Element;
// let opt = <MainButton />;
// let opt = <MainButton children="chidlren" />;
// let opt = <MainButton <|[|{| isWriteAccess: true |}onClick|]={()=>{}}|> />;
// let opt = <MainButton <|[|{| isWriteAccess: true |}onClick|]={()=>{}}|> ignore-prop />;
// let opt = <MainButton goTo="goTo" />;
// let opt = <MainButton wrong />;

  // === Definitions ===
  // === /tests/cases/fourslash/file.tsx ===
  // --- (line: 8) skipped ---
  //     className?: string;
  // }
  // interface ButtonProps extends ClickableProps {
  //     /*FIND ALL REFS*/<|[|onClick|](event?: React.MouseEvent<HTMLButtonElement>): void;|>
  // }
  // interface LinkProps extends ClickableProps {
  //     goTo: string;
  // --- (line: 16) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "method",
    "name": "(method) ButtonProps.onClick(event?: React.MouseEvent<HTMLButtonElement>): void",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "method",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "ButtonProps",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "onClick",
      "kind": "methodName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "event",
      "kind": "parameterName"
     },
     {
      "text": "?",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "React",
      "kind": "text"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "MouseEvent",
      "kind": "text"
     },
     {
      "text": "<",
      "kind": "punctuation"
     },
     {
      "text": "HTMLButtonElement",
      "kind": "text"
     },
     {
      "text": ">",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     }
    ]
   }
  ]