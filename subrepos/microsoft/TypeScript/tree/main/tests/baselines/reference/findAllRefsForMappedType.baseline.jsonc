// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsForMappedType.ts ===
// interface T { /*FIND ALL REFS*/<|[|{| isDefinition: true |}a|]: number|> };
// type U = { [K in keyof T]: string };
// type V = { [K in keyof U]: boolean };
// const u: U = { <|[|{| isWriteAccess: true |}a|]: ""|> }
// const v: V = { <|[|{| isWriteAccess: true |}a|]: true|> }

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsForMappedType.ts ===
  // interface T { /*FIND ALL REFS*/<|[|a|]: number|> };
  // type U = { [K in keyof T]: string };
  // type V = { [K in keyof U]: boolean };
  // const u: U = { a: "" }
  // const v: V = { a: true }

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) T.a: number",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "a",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   }
  ]