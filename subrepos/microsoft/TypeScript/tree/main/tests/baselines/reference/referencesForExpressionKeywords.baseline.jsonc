// === findAllReferences ===
// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| isWriteAccess: true |}C|] {
//     static x = 1;
// }|>
// /*FIND ALL REFS*/new [|C|]();
// void [|C|];
// typeof [|C|];
// delete [|C|].x;
// async function* f() {
//     yield [|C|];
//     await [|C|];
// }
// "x" in [|C|];
// undefined instanceof [|C|];
// undefined as [|C|];

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
  // <|class [|C|] {
  //     static x = 1;
  // }|>
  // /*FIND ALL REFS*/new C();
  // void C;
  // typeof C;
  // delete C.x;
  // --- (line: 8) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class C",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| isWriteAccess: true |}C|] {
//     static x = 1;
// }|>
// new [|C|]();
// /*FIND ALL REFS*/void [|C|];
// typeof [|C|];
// delete [|C|].x;
// async function* f() {
//     yield [|C|];
//     await [|C|];
// }
// "x" in [|C|];
// undefined instanceof [|C|];
// undefined as [|C|];

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
  // <|class [|C|] {
  //     static x = 1;
  // }|>
  // new C();
  // /*FIND ALL REFS*/void C;
  // typeof C;
  // delete C.x;
  // async function* f() {
  // --- (line: 9) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class C",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| isWriteAccess: true |}C|] {
//     static x = 1;
// }|>
// new [|C|]();
// void [|C|];
// /*FIND ALL REFS*/typeof [|C|];
// delete [|C|].x;
// async function* f() {
//     yield [|C|];
//     await [|C|];
// }
// "x" in [|C|];
// undefined instanceof [|C|];
// undefined as [|C|];

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
  // <|class [|C|] {
  //     static x = 1;
  // }|>
  // new C();
  // void C;
  // /*FIND ALL REFS*/typeof C;
  // delete C.x;
  // async function* f() {
  //     yield C;
  // --- (line: 10) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class C",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| isWriteAccess: true |}C|] {
//     static x = 1;
// }|>
// new [|C|]();
// void [|C|];
// typeof [|C|];
// delete [|C|].x;
// async function* f() {
//     /*FIND ALL REFS*/yield [|C|];
//     await [|C|];
// }
// "x" in [|C|];
// undefined instanceof [|C|];
// undefined as [|C|];

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
  // <|class [|C|] {
  //     static x = 1;
  // }|>
  // new C();
  // void C;
  // typeof C;
  // delete C.x;
  // async function* f() {
  //     /*FIND ALL REFS*/yield C;
  //     await C;
  // }
  // "x" in C;
  // undefined instanceof C;
  // undefined as C;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class C",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| isWriteAccess: true |}C|] {
//     static x = 1;
// }|>
// new [|C|]();
// void [|C|];
// typeof [|C|];
// delete [|C|].x;
// async function* f() {
//     yield [|C|];
//     /*FIND ALL REFS*/await [|C|];
// }
// "x" in [|C|];
// undefined instanceof [|C|];
// undefined as [|C|];

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
  // <|class [|C|] {
  //     static x = 1;
  // }|>
  // new C();
  // void C;
  // typeof C;
  // delete C.x;
  // async function* f() {
  //     yield C;
  //     /*FIND ALL REFS*/await C;
  // }
  // "x" in C;
  // undefined instanceof C;
  // undefined as C;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class C",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| isWriteAccess: true |}C|] {
//     static x = 1;
// }|>
// new [|C|]();
// void [|C|];
// typeof [|C|];
// delete [|C|].x;
// async function* f() {
//     yield [|C|];
//     await [|C|];
// }
// "x" /*FIND ALL REFS*/in [|C|];
// undefined instanceof [|C|];
// undefined as [|C|];

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
  // <|class [|C|] {
  //     static x = 1;
  // }|>
  // new C();
  // void C;
  // typeof C;
  // delete C.x;
  // async function* f() {
  //     yield C;
  //     await C;
  // }
  // "x" /*FIND ALL REFS*/in C;
  // undefined instanceof C;
  // undefined as C;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class C",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| isWriteAccess: true |}C|] {
//     static x = 1;
// }|>
// new [|C|]();
// void [|C|];
// typeof [|C|];
// delete [|C|].x;
// async function* f() {
//     yield [|C|];
//     await [|C|];
// }
// "x" in [|C|];
// undefined /*FIND ALL REFS*/instanceof [|C|];
// undefined as [|C|];

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
  // <|class [|C|] {
  //     static x = 1;
  // }|>
  // new C();
  // void C;
  // typeof C;
  // delete C.x;
  // async function* f() {
  //     yield C;
  //     await C;
  // }
  // "x" in C;
  // undefined /*FIND ALL REFS*/instanceof C;
  // undefined as C;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class C",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// <|class [|{| isWriteAccess: true |}C|] {
//     static x = 1;
// }|>
// new [|C|]();
// void [|C|];
// typeof [|C|];
// delete [|C|].x;
// async function* f() {
//     yield [|C|];
//     await [|C|];
// }
// "x" in [|C|];
// undefined instanceof [|C|];
// undefined /*FIND ALL REFS*/as [|C|];

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
  // <|class [|C|] {
  //     static x = 1;
  // }|>
  // new C();
  // void C;
  // typeof C;
  // --- (line: 7) skipped ---

  // --- (line: 10) skipped ---
  // }
  // "x" in C;
  // undefined instanceof C;
  // undefined /*FIND ALL REFS*/as C;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "class",
    "name": "class C",
    "displayParts": [
     {
      "text": "class",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
// class C {
//     <|static [|{| isWriteAccess: true |}x|] = 1;|>
// }
// new C();
// void C;
// typeof C;
// /*FIND ALL REFS*/delete C.[|x|];
// async function* f() {
//     yield C;
//     await C;
// --- (line: 11) skipped ---

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForExpressionKeywords.ts ===
  // class C {
  //     <|static [|x|] = 1;|>
  // }
  // new C();
  // void C;
  // typeof C;
  // /*FIND ALL REFS*/delete C.x;
  // async function* f() {
  //     yield C;
  //     await C;
  // --- (line: 11) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) C.x: number",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "x",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   }
  ]