// === findAllReferences ===
// === /a.tsx ===
// namespace JSX {
//     export interface Element { }
//     export interface IntrinsicElements {
//         /*FIND ALL REFS*/<|[|{| isDefinition: true |}div|]: any;|>
//     }
// }
// 
// const Comp = () =>
//     <|<|<[|{| contextId: 1 |}div|]>
//         Some content
//         <|<|<[|{| contextId: 3 |}div|]>More content</[|{| contextId: 4 |}div|]>|>|>
//     </[|{| contextId: 2 |}div|]>|>|>;
// 
// const x = <Comp>
//     Content
// </Comp>;

  // === Definitions ===
  // === /a.tsx ===
  // namespace JSX {
  //     export interface Element { }
  //     export interface IntrinsicElements {
  //         /*FIND ALL REFS*/<|[|div|]: any;|>
  //     }
  // }
  // 
  // --- (line: 8) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) JSX.IntrinsicElements.div: any",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "JSX",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "IntrinsicElements",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "div",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "any",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /a.tsx ===
// namespace JSX {
//     export interface Element { }
//     export interface IntrinsicElements {
//         <|[|div|]: any;|>
//     }
// }
// 
// const Comp = () =>
//     <|<|</*FIND ALL REFS*/[|{| contextId: 1 |}div|]>
//         Some content
//         <|<|<[|{| contextId: 3 |}div|]>More content</[|{| contextId: 4 |}div|]>|>|>
//     </[|{| contextId: 2 |}div|]>|>|>;
// 
// const x = <Comp>
//     Content
// </Comp>;

  // === Definitions ===
  // === /a.tsx ===
  // namespace JSX {
  //     export interface Element { }
  //     export interface IntrinsicElements {
  //         <|[|div|]: any;|>
  //     }
  // }
  // 
  // const Comp = () =>
  //     </*FIND ALL REFS*/div>
  //         Some content
  //         <div>More content</div>
  //     </div>;
  // --- (line: 13) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) JSX.IntrinsicElements.div: any",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "JSX",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "IntrinsicElements",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "div",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "any",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /a.tsx ===
// namespace JSX {
//     export interface Element { }
//     export interface IntrinsicElements {
//         <|[|div|]: any;|>
//     }
// }
// 
// const Comp = () =>
//     <|<|<[|{| contextId: 1 |}div|]>
//         Some content
//         <|<|</*FIND ALL REFS*/[|{| contextId: 3 |}div|]>More content</[|{| contextId: 4 |}div|]>|>|>
//     </[|{| contextId: 2 |}div|]>|>|>;
// 
// const x = <Comp>
//     Content
// </Comp>;

  // === Definitions ===
  // === /a.tsx ===
  // namespace JSX {
  //     export interface Element { }
  //     export interface IntrinsicElements {
  //         <|[|div|]: any;|>
  //     }
  // }
  // 
  // const Comp = () =>
  //     <div>
  //         Some content
  //         </*FIND ALL REFS*/div>More content</div>
  //     </div>;
  // 
  // const x = <Comp>
  //     Content
  // </Comp>;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) JSX.IntrinsicElements.div: any",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "JSX",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "IntrinsicElements",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "div",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "any",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /a.tsx ===
// namespace JSX {
//     export interface Element { }
//     export interface IntrinsicElements {
//         <|[|div|]: any;|>
//     }
// }
// 
// const Comp = () =>
//     <|<|<[|{| contextId: 1 |}div|]>
//         Some content
//         <|<|<[|{| contextId: 3 |}div|]>More content<//*FIND ALL REFS*/[|{| contextId: 4 |}div|]>|>|>
//     </[|{| contextId: 2 |}div|]>|>|>;
// 
// const x = <Comp>
//     Content
// </Comp>;

  // === Definitions ===
  // === /a.tsx ===
  // namespace JSX {
  //     export interface Element { }
  //     export interface IntrinsicElements {
  //         <|[|div|]: any;|>
  //     }
  // }
  // 
  // const Comp = () =>
  //     <div>
  //         Some content
  //         <div>More content<//*FIND ALL REFS*/div>
  //     </div>;
  // 
  // const x = <Comp>
  //     Content
  // </Comp>;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) JSX.IntrinsicElements.div: any",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "JSX",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "IntrinsicElements",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "div",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "any",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /a.tsx ===
// namespace JSX {
//     export interface Element { }
//     export interface IntrinsicElements {
//         <|[|div|]: any;|>
//     }
// }
// 
// const Comp = () =>
//     <|<|<[|{| contextId: 1 |}div|]>
//         Some content
//         <|<|<[|{| contextId: 3 |}div|]>More content</[|{| contextId: 4 |}div|]>|>|>
//     <//*FIND ALL REFS*/[|{| contextId: 2 |}div|]>|>|>;
// 
// const x = <Comp>
//     Content
// </Comp>;

  // === Definitions ===
  // === /a.tsx ===
  // namespace JSX {
  //     export interface Element { }
  //     export interface IntrinsicElements {
  //         <|[|div|]: any;|>
  //     }
  // }
  // 
  // const Comp = () =>
  //     <div>
  //         Some content
  //         <div>More content</div>
  //     <//*FIND ALL REFS*/div>;
  // 
  // const x = <Comp>
  //     Content
  // </Comp>;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) JSX.IntrinsicElements.div: any",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "JSX",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "IntrinsicElements",
      "kind": "interfaceName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "div",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "any",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /a.tsx ===
// --- (line: 4) skipped ---
//     }
// }
// 
// <|const /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}Comp|] = () =>
//     <div>
//         Some content
//         <div>More content</div>
//     </div>;|>
// 
// const x = <|<|<[|{| contextId: 1 |}Comp|]>
//     Content
// </[|{| contextId: 2 |}Comp|]>|>|>;

  // === Definitions ===
  // === /a.tsx ===
  // --- (line: 4) skipped ---
  //     }
  // }
  // 
  // <|const /*FIND ALL REFS*/[|Comp|] = () =>
  //     <div>
  //         Some content
  //         <div>More content</div>
  //     </div>;|>
  // 
  // const x = <Comp>
  //     Content
  // </Comp>;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "const",
    "name": "const Comp: () => JSX.Element",
    "displayParts": [
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Comp",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=>",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "JSX",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Element",
      "kind": "interfaceName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /a.tsx ===
// --- (line: 4) skipped ---
//     }
// }
// 
// <|const [|{| isWriteAccess: true |}Comp|] = () =>
//     <div>
//         Some content
//         <div>More content</div>
//     </div>;|>
// 
// const x = <|<|</*FIND ALL REFS*/[|{| contextId: 1 |}Comp|]>
//     Content
// </[|{| contextId: 2 |}Comp|]>|>|>;

  // === Definitions ===
  // === /a.tsx ===
  // --- (line: 4) skipped ---
  //     }
  // }
  // 
  // <|const [|Comp|] = () =>
  //     <div>
  //         Some content
  //         <div>More content</div>
  //     </div>;|>
  // 
  // const x = </*FIND ALL REFS*/Comp>
  //     Content
  // </Comp>;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "const",
    "name": "const Comp: () => JSX.Element",
    "displayParts": [
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Comp",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=>",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "JSX",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Element",
      "kind": "interfaceName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /a.tsx ===
// --- (line: 4) skipped ---
//     }
// }
// 
// <|const [|{| isWriteAccess: true |}Comp|] = () =>
//     <div>
//         Some content
//         <div>More content</div>
//     </div>;|>
// 
// const x = <|<|<[|{| contextId: 1 |}Comp|]>
//     Content
// <//*FIND ALL REFS*/[|{| contextId: 2 |}Comp|]>|>|>;

  // === Definitions ===
  // === /a.tsx ===
  // --- (line: 4) skipped ---
  //     }
  // }
  // 
  // <|const [|Comp|] = () =>
  //     <div>
  //         Some content
  //         <div>More content</div>
  //     </div>;|>
  // 
  // const x = <Comp>
  //     Content
  // <//*FIND ALL REFS*/Comp>;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "const",
    "name": "const Comp: () => JSX.Element",
    "displayParts": [
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "Comp",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=>",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "JSX",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "Element",
      "kind": "interfaceName"
     }
    ]
   }
  ]



// === documentHighlights ===
// === /a.tsx ===
// namespace JSX {
//     export interface Element { }
//     export interface IntrinsicElements {
//         /*HIGHLIGHTS*/<|[|{| kind: "reference" |}div|]: any;|>
//     }
// }
// 
// const Comp = () =>
//     <|<|<[|{| contextId: 1, kind: "reference" |}div|]>
//         Some content
//         <|<|<[|{| contextId: 3, kind: "reference" |}div|]>More content</[|{| contextId: 4, kind: "reference" |}div|]>|>|>
//     </[|{| contextId: 2, kind: "reference" |}div|]>|>|>;
// 
// const x = <Comp>
//     Content
// </Comp>;



// === documentHighlights ===
// === /a.tsx ===
// --- (line: 5) skipped ---
// }
// 
// const Comp = () =>
//     </*HIGHLIGHTS*/[|{| kind: "none" |}div|]>
//         Some content
//         <div>More content</div>
//     </[|{| kind: "none" |}div|]>;
// 
// const x = <Comp>
//     Content
// </Comp>;



// === documentHighlights ===
// === /a.tsx ===
// --- (line: 7) skipped ---
// const Comp = () =>
//     <div>
//         Some content
//         </*HIGHLIGHTS*/[|{| kind: "none" |}div|]>More content</[|{| kind: "none" |}div|]>
//     </div>;
// 
// const x = <Comp>
//     Content
// </Comp>;



// === documentHighlights ===
// === /a.tsx ===
// --- (line: 7) skipped ---
// const Comp = () =>
//     <div>
//         Some content
//         <[|{| kind: "none" |}div|]>More content<//*HIGHLIGHTS*/[|{| kind: "none" |}div|]>
//     </div>;
// 
// const x = <Comp>
//     Content
// </Comp>;



// === documentHighlights ===
// === /a.tsx ===
// --- (line: 5) skipped ---
// }
// 
// const Comp = () =>
//     <[|{| kind: "none" |}div|]>
//         Some content
//         <div>More content</div>
//     <//*HIGHLIGHTS*/[|{| kind: "none" |}div|]>;
// 
// const x = <Comp>
//     Content
// </Comp>;



// === documentHighlights ===
// === /a.tsx ===
// --- (line: 4) skipped ---
//     }
// }
// 
// <|const /*HIGHLIGHTS*/[|{| kind: "writtenReference" |}Comp|] = () =>
//     <div>
//         Some content
//         <div>More content</div>
//     </div>;|>
// 
// const x = <|<|<[|{| contextId: 1, kind: "reference" |}Comp|]>
//     Content
// </[|{| contextId: 2, kind: "reference" |}Comp|]>|>|>;



// === documentHighlights ===
// === /a.tsx ===
// --- (line: 10) skipped ---
//         <div>More content</div>
//     </div>;
// 
// const x = </*HIGHLIGHTS*/[|{| kind: "none" |}Comp|]>
//     Content
// </[|{| kind: "none" |}Comp|]>;



// === documentHighlights ===
// === /a.tsx ===
// --- (line: 10) skipped ---
//         <div>More content</div>
//     </div>;
// 
// const x = <[|{| kind: "none" |}Comp|]>
//     Content
// <//*HIGHLIGHTS*/[|{| kind: "none" |}Comp|]>;