//// [tests/cases/conformance/externalModules/verbatimModuleSyntaxNoElisionCJS.ts] ////

=== /a.ts ===
interface I {}
>I : Symbol(I, Decl(a.ts, 0, 0))

export = I;
>I : Symbol(I, Decl(a.ts, 0, 0))

=== /b.ts ===
import I = require("./a");
>I : Symbol(I, Decl(b.ts, 0, 0))

=== /c.ts ===
interface I {}
>I : Symbol(I, Decl(c.ts, 0, 0), Decl(c.ts, 0, 14))

namespace I {
>I : Symbol(I, Decl(c.ts, 0, 0), Decl(c.ts, 0, 14))

    export const x = 1;
>x : Symbol(x, Decl(c.ts, 2, 16))
}
export = I;
>I : Symbol(I, Decl(c.ts, 0, 0), Decl(c.ts, 0, 14))

=== /d.ts ===
import I = require("./c");
>I : Symbol(I, Decl(d.ts, 0, 0))

import type J = require("./c");
>J : Symbol(J, Decl(d.ts, 0, 26))

export = J;
>J : Symbol(J, Decl(d.ts, 0, 26))

=== /e.d.ts ===
interface I {}
>I : Symbol(I, Decl(e.d.ts, 0, 0))

export = I;
>I : Symbol(I, Decl(e.d.ts, 0, 0))

=== /f.ts ===
import type I = require("./e");
>I : Symbol(I, Decl(f.ts, 0, 0), Decl(f.ts, 1, 5))

const I = {};
>I : Symbol(I, Decl(f.ts, 0, 0), Decl(f.ts, 1, 5))

export = I;
>I : Symbol(I, Decl(f.ts, 0, 0), Decl(f.ts, 1, 5))

=== /z.ts ===

// test harness is weird if the last file includs a require >:(
