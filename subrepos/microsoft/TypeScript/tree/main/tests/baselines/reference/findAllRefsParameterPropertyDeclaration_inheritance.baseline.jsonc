// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsParameterPropertyDeclaration_inheritance.ts ===
// class C {
// 	constructor(<|public /*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true, isDefinition: true |}x|]: string|>) {
// 		[|{| defId: 1 |}x|];
// 	}
// }
// class D extends C {
// 	constructor(<|public [|{| defId: 2, isWriteAccess: true |}x|]: string|>) {
// 		super([|{| defId: 2 |}x|]);
// 	}
// }

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsParameterPropertyDeclaration_inheritance.ts ===
  // class C {
  // 	constructor(<|<|public /*FIND ALL REFS*/[|{| contextId: 0, defId: 0 |}[|{| contextId: 1, defId: 1 |}x|]|]: string|>|>) {
  // 		x;
  // 	}
  // }
  // class D extends C {
  // 	constructor(<|public [|{| defId: 2 |}x|]: string|>) {
  // 		super(x);
  // 	}
  // }

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) C.x: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "x",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "parameter",
    "name": "(parameter) x: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "parameter",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "x",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 2,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) D.x: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "D",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "x",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsParameterPropertyDeclaration_inheritance.ts ===
// class C {
// 	constructor(<|public [|{| defId: 0, isWriteAccess: true |}x|]: string|>) {
// 		/*FIND ALL REFS*/[|{| defId: 1 |}x|];
// 	}
// }
// class D extends C {
// --- (line: 7) skipped ---

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsParameterPropertyDeclaration_inheritance.ts ===
  // class C {
  // 	constructor(<|<|public [|{| contextId: 0, defId: 0 |}[|{| contextId: 1, defId: 1 |}x|]|]: string|>|>) {
  // 		/*FIND ALL REFS*/x;
  // 	}
  // }
  // class D extends C {
  // --- (line: 7) skipped ---

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) C.x: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "x",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "parameter",
    "name": "(parameter) x: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "parameter",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "x",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsParameterPropertyDeclaration_inheritance.ts ===
// class C {
// 	constructor(<|public [|{| defId: 0, isWriteAccess: true |}x|]: string|>) {
// 		[|{| defId: 0 |}x|];
// 	}
// }
// class D extends C {
// 	constructor(<|public /*FIND ALL REFS*/[|{| defId: 1, isWriteAccess: true, isDefinition: true |}x|]: string|>) {
// 		super([|{| defId: 2 |}x|]);
// 	}
// }

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsParameterPropertyDeclaration_inheritance.ts ===
  // class C {
  // 	constructor(<|public [|{| defId: 0 |}x|]: string|>) {
  // 		x;
  // 	}
  // }
  // class D extends C {
  // 	constructor(<|<|public /*FIND ALL REFS*/[|{| contextId: 1, defId: 1 |}[|{| contextId: 2, defId: 2 |}x|]|]: string|>|>) {
  // 		super(x);
  // 	}
  // }

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) C.x: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "C",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "x",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) D.x: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "D",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "x",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 2,
    "containerKind": "",
    "containerName": "",
    "kind": "parameter",
    "name": "(parameter) x: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "parameter",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "x",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/findAllRefsParameterPropertyDeclaration_inheritance.ts ===
// --- (line: 3) skipped ---
// 	}
// }
// class D extends C {
// 	constructor(<|public [|{| defId: 0, isWriteAccess: true |}x|]: string|>) {
// 		super(/*FIND ALL REFS*/[|{| defId: 1 |}x|]);
// 	}
// }

  // === Definitions ===
  // === /tests/cases/fourslash/findAllRefsParameterPropertyDeclaration_inheritance.ts ===
  // --- (line: 3) skipped ---
  // 	}
  // }
  // class D extends C {
  // 	constructor(<|<|public [|{| contextId: 0, defId: 0 |}[|{| contextId: 1, defId: 1 |}x|]|]: string|>|>) {
  // 		super(/*FIND ALL REFS*/x);
  // 	}
  // }

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) D.x: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "D",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "x",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "parameter",
    "name": "(parameter) x: string",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "parameter",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "x",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "string",
      "kind": "keyword"
     }
    ]
   }
  ]