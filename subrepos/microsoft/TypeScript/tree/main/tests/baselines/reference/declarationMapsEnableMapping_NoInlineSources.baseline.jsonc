// === goToImplementation ===
// === /index.ts ===
// export class Foo {
//     member: string;
//     [|methodName|](propName: SomeType): SomeType { return propName; }
//     otherMethod() {
//         if (Math.random() > 0.5) {
//             return {x: 42};
// --- (line: 7) skipped ---

// === /mymodule.ts ===
// import * as mod from "/dist/index";
// const instance = new mod.Foo();
// instance./*GOTO IMPL*/methodName({member: 12});

  // === Details ===
  [
   {
    "kind": "",
    "displayParts": []
   }
  ]



// === goToType ===
// === /index.ts ===
// --- (line: 8) skipped ---
//     }
// }
// 
// export interface [|SomeType|] {
//     member: number;
// }

// === /mymodule.ts ===
// import * as mod from "/dist/index";
// const instance = new mod.Foo();
// instance./*GOTO TYPE*/methodName({member: 12});

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "",
    "name": ""
   }
  ]



// === goToDefinition ===
// === /index.ts ===
// export class Foo {
//     member: string;
//     [|methodName|](propName: SomeType): SomeType { return propName; }
//     otherMethod() {
//         if (Math.random() > 0.5) {
//             return {x: 42};
// --- (line: 7) skipped ---

// === /mymodule.ts ===
// import * as mod from "/dist/index";
// const instance = new mod.Foo();
// instance./*GOTO DEF*/[|methodName|]({member: 12});

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "",
    "name": ""
   }
  ]



// === getDefinitionAtPosition ===
// === /index.ts ===
// export class Foo {
//     member: string;
//     [|methodName|](propName: SomeType): SomeType { return propName; }
//     otherMethod() {
//         if (Math.random() > 0.5) {
//             return {x: 42};
// --- (line: 7) skipped ---

// === /mymodule.ts ===
// import * as mod from "/dist/index";
// const instance = new mod.Foo();
// instance./*GOTO DEF POS*/methodName({member: 12});

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "",
    "name": ""
   }
  ]