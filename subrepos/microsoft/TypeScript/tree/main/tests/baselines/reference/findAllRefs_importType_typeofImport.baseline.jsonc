// === findAllReferences ===
// === /b.ts ===
// /*FIND ALL REFS*/<|const [|{| isWriteAccess: true, isDefinition: true |}x|]: typeof import("./a") = { x: 0 };|>
// const y: typeof import("./a") = { x: 0 };

  // === Definitions ===
  // === /b.ts ===
  // /*FIND ALL REFS*/<|const [|x|]: typeof import("./a") = { x: 0 };|>
  // const y: typeof import("./a") = { x: 0 };

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "const",
    "name": "const x: typeof import(\"/a\")",
    "displayParts": [
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "x",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "typeof",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "\"/a\"",
      "kind": "stringLiteral"
     },
     {
      "text": ")",
      "kind": "punctuation"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /b.ts ===
// <|const x: typeof import("/*FIND ALL REFS*/[|./a|]") = { x: 0 };|>
// <|const y: typeof import("[|./a|]") = { x: 0 };|>

  // === Definitions ===
  // === /a.ts ===
  // [|export const x = 0;|]

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "module",
    "name": "module \"/a\"",
    "displayParts": [
     {
      "text": "module",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "\"/a\"",
      "kind": "stringLiteral"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /b.ts ===
// const x: typeof import("./a") = { x: 0 };
// /*FIND ALL REFS*/<|const [|{| isWriteAccess: true, isDefinition: true |}y|]: typeof import("./a") = { x: 0 };|>

  // === Definitions ===
  // === /b.ts ===
  // const x: typeof import("./a") = { x: 0 };
  // /*FIND ALL REFS*/<|const [|y|]: typeof import("./a") = { x: 0 };|>

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "const",
    "name": "const y: typeof import(\"/a\")",
    "displayParts": [
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "y",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "typeof",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "\"/a\"",
      "kind": "stringLiteral"
     },
     {
      "text": ")",
      "kind": "punctuation"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /b.ts ===
// <|const x: typeof import("[|./a|]") = { x: 0 };|>
// <|const y: typeof import("/*FIND ALL REFS*/[|./a|]") = { x: 0 };|>

  // === Definitions ===
  // === /a.ts ===
  // [|export const x = 0;|]

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "module",
    "name": "module \"/a\"",
    "displayParts": [
     {
      "text": "module",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "\"/a\"",
      "kind": "stringLiteral"
     }
    ]
   }
  ]