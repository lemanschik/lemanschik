// === findAllReferences ===
// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// <|declare namespace /*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true, isDefinition: true |}N|] {
//     export var x: number;
// }|>
// declare module "mod" {
//     <|export = [|{| defId: 0 |}N|];|>
// }
// declare module "a" {
//     <|import * as [|{| defId: 1, isWriteAccess: true |}N|] from "mod";|>
//     <|export { [|{| defId: 1, isWriteAccess: true |}N|] };|> // Renaming N here would rename
// }
// declare module "b" {
//     <|import { [|{| defId: 2, isWriteAccess: true |}N|] } from "a";|>
//     export const y: typeof [|{| defId: 2 |}N|].x;
// }

  // === Definitions ===
  // === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
  // <|declare namespace /*FIND ALL REFS*/[|{| defId: 0 |}N|] {
  //     export var x: number;
  // }|>
  // declare module "mod" {
  //     export = N;
  // }
  // declare module "a" {
  //     <|import * as [|{| defId: 1 |}N|] from "mod";|>
  //     export { N }; // Renaming N here would rename
  // }
  // declare module "b" {
  //     <|import { [|{| defId: 2 |}N|] } from "a";|>
  //     export const y: typeof N.x;
  // }

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "module",
    "name": "namespace N",
    "displayParts": [
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "N",
      "kind": "moduleName"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "(alias) namespace N\nimport N",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "alias",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "N",
      "kind": "aliasName"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "N",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 2,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "(alias) namespace N\nimport N",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "alias",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "N",
      "kind": "aliasName"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "N",
      "kind": "aliasName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// <|declare namespace [|{| defId: 1, isWriteAccess: true |}N|] {
//     export var x: number;
// }|>
// declare module "mod" {
//     <|export = [|{| defId: 1 |}N|];|>
// }
// declare module "a" {
//     <|import * as /*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true, isDefinition: true |}N|] from "mod";|>
//     <|export { [|{| defId: 0, isWriteAccess: true |}N|] };|> // Renaming N here would rename
// }
// declare module "b" {
//     <|import { [|{| defId: 2, isWriteAccess: true |}N|] } from "a";|>
//     export const y: typeof [|{| defId: 2 |}N|].x;
// }

  // === Definitions ===
  // === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
  // <|declare namespace [|{| defId: 1 |}N|] {
  //     export var x: number;
  // }|>
  // declare module "mod" {
  //     export = N;
  // }
  // declare module "a" {
  //     <|import * as /*FIND ALL REFS*/[|{| defId: 0 |}N|] from "mod";|>
  //     export { N }; // Renaming N here would rename
  // }
  // declare module "b" {
  //     <|import { [|{| defId: 2 |}N|] } from "a";|>
  //     export const y: typeof N.x;
  // }

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "(alias) namespace N\nimport N",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "alias",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "N",
      "kind": "aliasName"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "N",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "module",
    "name": "namespace N",
    "displayParts": [
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "N",
      "kind": "moduleName"
     }
    ]
   },
   {
    "defId": 2,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "(alias) namespace N\nimport N",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "alias",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "N",
      "kind": "aliasName"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "N",
      "kind": "aliasName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// <|declare namespace [|{| defId: 2, isWriteAccess: true |}N|] {
//     export var x: number;
// }|>
// declare module "mod" {
//     <|export = [|{| defId: 2 |}N|];|>
// }
// declare module "a" {
//     <|import * as [|{| defId: 1, isWriteAccess: true |}N|] from "mod";|>
//     <|export { [|{| defId: 1, isWriteAccess: true |}N|] };|> // Renaming N here would rename
// }
// declare module "b" {
//     <|import { /*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true, isDefinition: true |}N|] } from "a";|>
//     export const y: typeof [|{| defId: 0 |}N|].x;
// }

  // === Definitions ===
  // === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
  // <|declare namespace [|{| defId: 2 |}N|] {
  //     export var x: number;
  // }|>
  // declare module "mod" {
  //     export = N;
  // }
  // declare module "a" {
  //     <|import * as [|{| defId: 1 |}N|] from "mod";|>
  //     export { N }; // Renaming N here would rename
  // }
  // declare module "b" {
  //     <|import { /*FIND ALL REFS*/[|{| defId: 0 |}N|] } from "a";|>
  //     export const y: typeof N.x;
  // }

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "(alias) namespace N\nimport N",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "alias",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "N",
      "kind": "aliasName"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "N",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "(alias) namespace N\nimport N",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "alias",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "N",
      "kind": "aliasName"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "N",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 2,
    "containerKind": "",
    "containerName": "",
    "kind": "module",
    "name": "namespace N",
    "displayParts": [
     {
      "text": "namespace",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "N",
      "kind": "moduleName"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// declare namespace N {
//     <|export var /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}x|]: number;|>
// }
// declare module "mod" {
//     export = N;
// --- (line: 6) skipped ---

// --- (line: 9) skipped ---
// }
// declare module "b" {
//     import { N } from "a";
//     export const y: typeof N.[|x|];
// }

  // === Definitions ===
  // === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
  // declare namespace N {
  //     <|export var /*FIND ALL REFS*/[|x|]: number;|>
  // }
  // declare module "mod" {
  //     export = N;
  // --- (line: 6) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "var",
    "name": "var N.x: number",
    "displayParts": [
     {
      "text": "var",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "N",
      "kind": "moduleName"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "x",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findRenameLocations ===
// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// <|declare namespace /*RENAME*/[|NRENAME|] {
//     export var x: number;
// }|>
// declare module "mod" {
//     <|export = [|NRENAME|];|>
// }
// declare module "a" {
//     <|import * as [|NRENAME|] from "mod";|>
//     <|export { [|NRENAME|] as N/*END SUFFIX*/ };|> // Renaming N here would rename
// }
// declare module "b" {
//     import { N } from "a";
//     export const y: typeof N.x;
// }



// === findRenameLocations ===
// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// <|declare namespace [|NRENAME|] {
//     export var x: number;
// }|>
// declare module "mod" {
//     <|export = /*RENAME*/[|NRENAME|];|>
// }
// declare module "a" {
//     <|import * as [|NRENAME|] from "mod";|>
//     <|export { [|NRENAME|] as N/*END SUFFIX*/ };|> // Renaming N here would rename
// }
// declare module "b" {
//     import { N } from "a";
//     export const y: typeof N.x;
// }



// === findRenameLocations ===
// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// --- (line: 4) skipped ---
//     export = N;
// }
// declare module "a" {
//     <|import * as /*RENAME*/[|NRENAME|] from "mod";|>
//     <|export { [|NRENAME|] as N/*END SUFFIX*/ };|> // Renaming N here would rename
// }
// declare module "b" {
//     import { N } from "a";
//     export const y: typeof N.x;
// }



// === findRenameLocations ===
// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// --- (line: 5) skipped ---
// }
// declare module "a" {
//     import * as N from "mod";
//     <|export { /*START PREFIX*/N as /*RENAME*/[|NRENAME|] };|> // Renaming N here would rename
// }
// declare module "b" {
//     <|import { [|NRENAME|] } from "a";|>
//     export const y: typeof [|NRENAME|].x;
// }



// === findRenameLocations ===
// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// --- (line: 8) skipped ---
//     export { N }; // Renaming N here would rename
// }
// declare module "b" {
//     <|import { /*START PREFIX*/N as /*RENAME*/[|NRENAME|] } from "a";|>
//     export const y: typeof [|NRENAME|].x;
// }



// === findRenameLocations ===
// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// --- (line: 8) skipped ---
//     export { N }; // Renaming N here would rename
// }
// declare module "b" {
//     <|import { /*START PREFIX*/N as [|NRENAME|] } from "a";|>
//     export const y: typeof /*RENAME*/[|NRENAME|].x;
// }



// === findRenameLocations ===
// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// declare namespace N {
//     <|export var /*RENAME*/[|xRENAME|]: number;|>
// }
// declare module "mod" {
//     export = N;
// --- (line: 6) skipped ---

// --- (line: 9) skipped ---
// }
// declare module "b" {
//     import { N } from "a";
//     export const y: typeof N.[|xRENAME|];
// }



// === findRenameLocations ===
// === /tests/cases/fourslash/renameImportOfExportEquals.ts ===
// declare namespace N {
//     <|export var [|xRENAME|]: number;|>
// }
// declare module "mod" {
//     export = N;
// --- (line: 6) skipped ---

// --- (line: 9) skipped ---
// }
// declare module "b" {
//     import { N } from "a";
//     export const y: typeof N./*RENAME*/[|xRENAME|];
// }