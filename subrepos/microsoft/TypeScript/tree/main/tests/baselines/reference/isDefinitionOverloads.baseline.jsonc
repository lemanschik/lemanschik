// === findAllReferences ===
// === /tests/cases/fourslash/isDefinitionOverloads.ts ===
// <|function /*FIND ALL REFS*/[|{| isDefinition: true |}f|](x: number): void;|>
// <|function [|{| isDefinition: true |}f|](x: string): void;|>
// <|function [|{| isWriteAccess: true, isDefinition: true |}f|](x: number | string) { }|>
// 
// [|f|](1);
// [|f|]("a");

  // === Definitions ===
  // === /tests/cases/fourslash/isDefinitionOverloads.ts ===
  // <|function /*FIND ALL REFS*/[|f|](x: number): void;|>
  // function f(x: string): void;
  // function f(x: number | string) { }
  // 
  // f(1);
  // f("a");

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "function f(x: number): void (+1 overload)",
    "displayParts": [
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "f",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "x",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "+",
      "kind": "operator"
     },
     {
      "text": "1",
      "kind": "numericLiteral"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "overload",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/isDefinitionOverloads.ts ===
// <|function [|{| isDefinition: true |}f|](x: number): void;|>
// <|function /*FIND ALL REFS*/[|{| isDefinition: true |}f|](x: string): void;|>
// <|function [|{| isWriteAccess: true, isDefinition: true |}f|](x: number | string) { }|>
// 
// [|f|](1);
// [|f|]("a");

  // === Definitions ===
  // === /tests/cases/fourslash/isDefinitionOverloads.ts ===
  // <|function [|f|](x: number): void;|>
  // function /*FIND ALL REFS*/f(x: string): void;
  // function f(x: number | string) { }
  // 
  // f(1);
  // f("a");

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "function f(x: number): void (+1 overload)",
    "displayParts": [
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "f",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "x",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "+",
      "kind": "operator"
     },
     {
      "text": "1",
      "kind": "numericLiteral"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "overload",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/isDefinitionOverloads.ts ===
// <|function [|{| isDefinition: true |}f|](x: number): void;|>
// <|function [|{| isDefinition: true |}f|](x: string): void;|>
// <|function /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}f|](x: number | string) { }|>
// 
// [|f|](1);
// [|f|]("a");

  // === Definitions ===
  // === /tests/cases/fourslash/isDefinitionOverloads.ts ===
  // <|function [|f|](x: number): void;|>
  // function f(x: string): void;
  // function /*FIND ALL REFS*/f(x: number | string) { }
  // 
  // f(1);
  // f("a");

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "function",
    "name": "function f(x: number): void (+1 overload)",
    "displayParts": [
     {
      "text": "function",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "f",
      "kind": "functionName"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "x",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "void",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "+",
      "kind": "operator"
     },
     {
      "text": "1",
      "kind": "numericLiteral"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "overload",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     }
    ]
   }
  ]