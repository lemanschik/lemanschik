truthinessCallExpressionCoercion2.ts(11,5): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(14,10): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(41,18): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(44,9): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(48,9): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(52,9): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(52,22): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(56,9): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(60,9): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(60,22): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(64,11): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(93,10): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(97,15): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(97,28): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(101,10): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(101,23): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(105,15): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(105,28): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(109,10): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(109,23): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(116,46): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(127,5): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(130,10): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(150,5): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(153,10): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(157,15): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(157,27): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(161,10): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(161,22): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(165,15): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(165,27): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(169,10): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(169,22): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(180,9): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
truthinessCallExpressionCoercion2.ts(183,14): error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?


==== truthinessCallExpressionCoercion2.ts (35 errors) ====
    declare class A {
        static from(): string;
    }
    
    declare class B {
        static from(): string;
    }
    
    function test(required1: () => boolean, required2: () => boolean, b: boolean, optional?: () => boolean) {
        // error
        required1 && console.log('required');
        ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
    
        // error
        1 && required1 && console.log('required');
             ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
    
        // ok
        required1 && required1();
    
        // ok
        required1 && 1 && required1();
    
        // ok
        optional && console.log('optional');
    
        // ok
        1 && optional && console.log('optional');
    
        // ok
        !!required1 && console.log('not required');
    
        // ok
        required1() && console.log('required call');
    
        // ok
        required1 && required2 && required1() && required2();
    
        // ok
        [].forEach((f: () => void) => f && f.apply(parent, []));
    
        // error
        required1 && required2 && required1() && console.log('foo');
                     ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
    
        // error
        if (required1 && b) {
            ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
        }
    
        // error
        if (required1 || b) {
            ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
        }
    
        // error
        if (required1 || required2) {
            ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
                         ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
        }
    
        // error
        if (required1 ?? b) {
            ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
        }
    
        // error
        if (required1 ?? required2) {
            ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
                         ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
        }
    
        // error
        if (((required1 && b))) {
              ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
        }
    
        // ok
        if (required1 && b) {
            required1();
        }
    
        // ok
        if (required1 || b) {
            required1();
        }
    
        // ok
        if (required1 ?? b) {
            required1();
        }
    
        // ok
        if (b ?? required1) {
            required1();
        }
    
        // ok
        if (((required1 && b))) {
            required1();
        }
    
        // error, extra parens are on purpose here
        if ((required1)) {
             ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
        }
    
        // error
        if (b && (required1 || required2)) {
                  ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
                               ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
        }
    
        // error
        if ((required1 || required2) && b) {
             ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
                          ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
        }
    
        // error
        if (b && (required1 ?? required2)) {
                  ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
                               ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
        }
    
        // error
        if ((required1 ?? required2) && b) {
             ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
                          ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
        }
    }
    
    function checksConsole() {
        // error
        typeof window !== 'undefined' && window.console &&
            ((window.console as any).firebug || (window.console.error && window.console.table));
                                                 ~~~~~~~~~~~~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
    }
    
    function checksPropertyAccess() {
        const x = {
            foo: {
                bar() { return true; }
            }
        }
    
        // error
        x.foo.bar && console.log('x.foo.bar');
        ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
    
        // error
        1 && x.foo.bar && console.log('x.foo.bar');
             ~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
    
        // ok
        x.foo.bar && x.foo.bar();
    
        // ok
        x.foo.bar && 1 && x.foo.bar();
    
        // ok
        const y = A.from && (A.from as Function) !== B.from ? true : false;
        y;
    
        const x1 = {
            a: { b: { c: () => {} } }
        }
        const x2 = {
            a: { b: { c: () => {} } }
        }
    
        // error
        x1.a.b.c && x2.a.b.c();
        ~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
    
        // error, extra parens are on purpose here
        if ((x1.a.b.c)) {
             ~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
        }
    
        // error
        if (1 && (x1.a.b.c || x2.a.b.c)) {
                  ~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
                              ~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
        }
    
        // error
        if ((x1.a.b.c || x2.a.b.c) && 1) {
             ~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
                         ~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
        }
    
        // error
        if (1 && (x1.a.b.c ?? x2.a.b.c)) {
                  ~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
                              ~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
        }
    
        // error
        if ((x1.a.b.c ?? x2.a.b.c) && 1) {
             ~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
                         ~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
        }
    }
    
    class Foo {
        optional?: () => boolean;
        required() {
            return true;
        }
        test() {
            // error
            this.required && console.log('required');
            ~~~~~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
    
            // error
            1 && this.required && console.log('required');
                 ~~~~~~~~~~~~~
!!! error TS2774: This condition will always return true since this function is always defined. Did you mean to call it instead?
    
            // ok
            this.required && this.required();
    
            // ok
            this.required && 1 && this.required();
    
            // ok
            1 && this.optional && console.log('optional');
        }
    }
    