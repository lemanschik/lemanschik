// === findAllReferences ===
// === /tests/cases/fourslash/index.tsx ===
// <|import { /*FIND ALL REFS*/[|{| defId: 0, isWriteAccess: true, isDefinition: true |}SubmissionComp|] } from "./RedditSubmission"|>
// function displaySubreddit(subreddit: string) {
//     let components = submissions
//         .map((value, index) => <|<[|{| defId: 0 |}SubmissionComp|] key={ index } elementPosition= { index } {...value.data} />|>);
// }

// === /tests/cases/fourslash/RedditSubmission.ts ===
// export const <|[|{| defId: 1, isWriteAccess: true |}SubmissionComp|] = (submission: SubmissionProps) =>
//     <div style|>={{ fontFamily: "sans-serif" }}></div>;

  // === Definitions ===
  // === /tests/cases/fourslash/index.tsx ===
  // <|import { /*FIND ALL REFS*/[|{| defId: 0 |}SubmissionComp|] } from "./RedditSubmission"|>
  // function displaySubreddit(subreddit: string) {
  //     let components = submissions
  //         .map((value, index) => <SubmissionComp key={ index } elementPosition= { index } {...value.data} />);
  // }

  // === /tests/cases/fourslash/RedditSubmission.ts ===
  // export const <|[|{| defId: 1 |}SubmissionComp|] = (submission: SubmissionProps) =>
  //     <div style|>={{ fontFamily: "sans-serif" }}></div>;

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "(alias) const SubmissionComp: (submission: SubmissionProps) => div\nimport SubmissionComp",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "alias",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "SubmissionComp",
      "kind": "aliasName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "submission",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "SubmissionProps",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=>",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "div",
      "kind": "text"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "SubmissionComp",
      "kind": "aliasName"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "const",
    "name": "const SubmissionComp: (submission: SubmissionProps) => div",
    "displayParts": [
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "SubmissionComp",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "submission",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "SubmissionProps",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=>",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "div",
      "kind": "text"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/RedditSubmission.ts ===
// export const /*FIND ALL REFS*/<|[|{| defId: 0, isWriteAccess: true, isDefinition: true |}SubmissionComp|] = (submission: SubmissionProps) =>
//     <div style|>={{ fontFamily: "sans-serif" }}></div>;

// === /tests/cases/fourslash/index.tsx ===
// <|import { [|{| defId: 1, isWriteAccess: true |}SubmissionComp|] } from "./RedditSubmission"|>
// function displaySubreddit(subreddit: string) {
//     let components = submissions
//         .map((value, index) => <|<[|{| defId: 1 |}SubmissionComp|] key={ index } elementPosition= { index } {...value.data} />|>);
// }

  // === Definitions ===
  // === /tests/cases/fourslash/RedditSubmission.ts ===
  // export const /*FIND ALL REFS*/<|[|{| defId: 0 |}SubmissionComp|] = (submission: SubmissionProps) =>
  //     <div style|>={{ fontFamily: "sans-serif" }}></div>;

  // === /tests/cases/fourslash/index.tsx ===
  // <|import { [|{| defId: 1 |}SubmissionComp|] } from "./RedditSubmission"|>
  // function displaySubreddit(subreddit: string) {
  //     let components = submissions
  //         .map((value, index) => <SubmissionComp key={ index } elementPosition= { index } {...value.data} />);
  // }

  // === Details ===
  [
   {
    "defId": 0,
    "containerKind": "",
    "containerName": "",
    "kind": "const",
    "name": "const SubmissionComp: (submission: SubmissionProps) => div",
    "displayParts": [
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "SubmissionComp",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "submission",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "SubmissionProps",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=>",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "div",
      "kind": "text"
     }
    ]
   },
   {
    "defId": 1,
    "containerKind": "",
    "containerName": "",
    "kind": "alias",
    "name": "(alias) const SubmissionComp: (submission: SubmissionProps) => div\nimport SubmissionComp",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "alias",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "SubmissionComp",
      "kind": "aliasName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "submission",
      "kind": "parameterName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "SubmissionProps",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=>",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "div",
      "kind": "text"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "import",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "SubmissionComp",
      "kind": "aliasName"
     }
    ]
   }
  ]