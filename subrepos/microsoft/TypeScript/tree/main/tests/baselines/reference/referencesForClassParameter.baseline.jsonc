// === findAllReferences ===
// === /tests/cases/fourslash/referencesForClassParameter.ts ===
// var p = 2;
// 
// class p { }
// 
// class foo {
//     constructor (/*FIND ALL REFS*/<|public [|{| isWriteAccess: true, isDefinition: true |}p|]: any|>) {
//     }
// 
//     public f(p) {
//         this.[|{| isWriteAccess: true |}p|] = p;
//     }
// 
// }
// 
// var n = new foo(undefined);
// n.[|{| isWriteAccess: true |}p|] = null;

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForClassParameter.ts ===
  // var p = 2;
  // 
  // class p { }
  // 
  // class foo {
  //     constructor (/*FIND ALL REFS*/<|public [|p|]: any|>) {
  //     }
  // 
  //     public f(p) {
  // --- (line: 10) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) foo.p: any",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "p",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "any",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForClassParameter.ts ===
// var p = 2;
// 
// class p { }
// 
// class foo {
//     constructor (<|public /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}p|]: any|>) {
//     }
// 
//     public f(p) {
//         this.[|{| isWriteAccess: true |}p|] = p;
//     }
// 
// }
// 
// var n = new foo(undefined);
// n.[|{| isWriteAccess: true |}p|] = null;

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForClassParameter.ts ===
  // var p = 2;
  // 
  // class p { }
  // 
  // class foo {
  //     constructor (<|public /*FIND ALL REFS*/[|p|]: any|>) {
  //     }
  // 
  //     public f(p) {
  // --- (line: 10) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) foo.p: any",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "p",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "any",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForClassParameter.ts ===
// var p = 2;
// 
// class p { }
// 
// class foo {
//     constructor (<|public [|{| isWriteAccess: true |}p|]: any|>) {
//     }
// 
//     public f(p) {
//         this./*FIND ALL REFS*/[|{| isWriteAccess: true |}p|] = p;
//     }
// 
// }
// 
// var n = new foo(undefined);
// n.[|{| isWriteAccess: true |}p|] = null;

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForClassParameter.ts ===
  // var p = 2;
  // 
  // class p { }
  // 
  // class foo {
  //     constructor (<|public [|p|]: any|>) {
  //     }
  // 
  //     public f(p) {
  //         this./*FIND ALL REFS*/p = p;
  //     }
  // 
  // }
  // --- (line: 14) skipped ---

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) foo.p: any",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "p",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "any",
      "kind": "keyword"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/referencesForClassParameter.ts ===
// var p = 2;
// 
// class p { }
// 
// class foo {
//     constructor (<|public [|{| isWriteAccess: true |}p|]: any|>) {
//     }
// 
//     public f(p) {
//         this.[|{| isWriteAccess: true |}p|] = p;
//     }
// 
// }
// 
// var n = new foo(undefined);
// n./*FIND ALL REFS*/[|{| isWriteAccess: true |}p|] = null;

  // === Definitions ===
  // === /tests/cases/fourslash/referencesForClassParameter.ts ===
  // var p = 2;
  // 
  // class p { }
  // 
  // class foo {
  //     constructor (<|public [|p|]: any|>) {
  //     }
  // 
  //     public f(p) {
  //         this.p = p;
  //     }
  // 
  // }
  // 
  // var n = new foo(undefined);
  // n./*FIND ALL REFS*/p = null;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "property",
    "name": "(property) foo.p: any",
    "displayParts": [
     {
      "text": "(",
      "kind": "punctuation"
     },
     {
      "text": "property",
      "kind": "text"
     },
     {
      "text": ")",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "foo",
      "kind": "className"
     },
     {
      "text": ".",
      "kind": "punctuation"
     },
     {
      "text": "p",
      "kind": "propertyName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "any",
      "kind": "keyword"
     }
    ]
   }
  ]