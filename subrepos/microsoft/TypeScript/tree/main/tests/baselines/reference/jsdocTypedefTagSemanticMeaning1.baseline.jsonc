// === findAllReferences ===
// === /tests/cases/fourslash/a.js ===
// /** @typedef {number} */
// /*FIND ALL REFS*/<|const [|{| isWriteAccess: true, isDefinition: true |}T|] = 1;|>
// /** @type {[|T|]} */
// const n = [|T|];

  // === Definitions ===
  // === /tests/cases/fourslash/a.js ===
  // /** @typedef {number} */
  // /*FIND ALL REFS*/<|const [|T|] = 1;|>
  // /** @type {T} */
  // const n = T;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "const",
    "name": "type T = number\nconst T: 1",
    "displayParts": [
     {
      "text": "type",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "localName"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=",
      "kind": "operator"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "1",
      "kind": "stringLiteral"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/a.js ===
// /** @typedef {number} */
// <|const /*FIND ALL REFS*/[|{| isWriteAccess: true, isDefinition: true |}T|] = 1;|>
// /** @type {[|T|]} */
// const n = [|T|];

  // === Definitions ===
  // === /tests/cases/fourslash/a.js ===
  // /** @typedef {number} */
  // <|const /*FIND ALL REFS*/[|T|] = 1;|>
  // /** @type {T} */
  // const n = T;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "const",
    "name": "type T = number\nconst T: 1",
    "displayParts": [
     {
      "text": "type",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "localName"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=",
      "kind": "operator"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "1",
      "kind": "stringLiteral"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/a.js ===
// /** @typedef {number} */
// <|const [|{| isWriteAccess: true |}T|] = 1;|>
// /** @type {/*FIND ALL REFS*/[|T|]} */
// const n = [|T|];

  // === Definitions ===
  // === /tests/cases/fourslash/a.js ===
  // /** @typedef {number} */
  // <|const [|T|] = 1;|>
  // /** @type {/*FIND ALL REFS*/T} */
  // const n = T;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "const",
    "name": "type T = number\nconst T: 1",
    "displayParts": [
     {
      "text": "type",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "localName"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=",
      "kind": "operator"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "1",
      "kind": "stringLiteral"
     }
    ]
   }
  ]



// === findAllReferences ===
// === /tests/cases/fourslash/a.js ===
// /** @typedef {number} */
// <|const [|{| isWriteAccess: true |}T|] = 1;|>
// /** @type {[|T|]} */
// const n = /*FIND ALL REFS*/[|T|];

  // === Definitions ===
  // === /tests/cases/fourslash/a.js ===
  // /** @typedef {number} */
  // <|const [|T|] = 1;|>
  // /** @type {T} */
  // const n = /*FIND ALL REFS*/T;

  // === Details ===
  [
   {
    "containerKind": "",
    "containerName": "",
    "kind": "const",
    "name": "type T = number\nconst T: 1",
    "displayParts": [
     {
      "text": "type",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "localName"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "=",
      "kind": "operator"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "number",
      "kind": "keyword"
     },
     {
      "text": "\n",
      "kind": "lineBreak"
     },
     {
      "text": "const",
      "kind": "keyword"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "T",
      "kind": "localName"
     },
     {
      "text": ":",
      "kind": "punctuation"
     },
     {
      "text": " ",
      "kind": "space"
     },
     {
      "text": "1",
      "kind": "stringLiteral"
     }
    ]
   }
  ]